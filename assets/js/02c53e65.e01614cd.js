"use strict";(self.webpackChunkdocusaurus_site=self.webpackChunkdocusaurus_site||[]).push([[30833],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),s=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,p=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),k=s(t),m=r,d=k["".concat(o,".").concat(m)]||k[m]||c[m]||p;return t?a.createElement(d,l(l({ref:n},u),{},{components:t})):a.createElement(d,l({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var p=t.length,l=new Array(p);l[0]=k;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<p;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},95665:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var a=t(87462),r=t(63366),p=(t(67294),t(3905)),l=["components"],i={title:"Python3.11 \u4ecb\u7ecd",description:"python3.11",authors:"wKevin",tags:["python","python3.11","TaskGroup","try...except*","TypeVarTuple","LiteralString","dataclass_transform","TypedDict"]},o=void 0,s={permalink:"/blog/2022/11/10/python3.11",source:"@site/blog/2022-11-10-python3.11/index.mdx",title:"Python3.11 \u4ecb\u7ecd",description:"python3.11",date:"2022-11-10T00:00:00.000Z",formattedDate:"November 10, 2022",tags:[{label:"python",permalink:"/blog/tags/python"},{label:"python3.11",permalink:"/blog/tags/python-3-11"},{label:"TaskGroup",permalink:"/blog/tags/task-group"},{label:"try...except*",permalink:"/blog/tags/try-except"},{label:"TypeVarTuple",permalink:"/blog/tags/type-var-tuple"},{label:"LiteralString",permalink:"/blog/tags/literal-string"},{label:"dataclass_transform",permalink:"/blog/tags/dataclass-transform"},{label:"TypedDict",permalink:"/blog/tags/typed-dict"}],truncated:!0,authors:[{name:"wKevin",title:"\u4e00\u9897\u5411\u4e0a\u7684\u6c34\u6ef4",url:"http://weibo.com/wkevin27",imageURL:"/img/avastar/angry.bird-l.jpg",key:"wKevin"}],frontMatter:{title:"Python3.11 \u4ecb\u7ecd",description:"python3.11",authors:"wKevin",tags:["python","python3.11","TaskGroup","try...except*","TypeVarTuple","LiteralString","dataclass_transform","TypedDict"]},prevItem:{title:"OpenAI python SDK",permalink:"/blog/2023/04/10/openai.cookbook"},nextItem:{title:"\u4f7f\u7528 git daemon \u5feb\u901f\u4f20\u9012\u4ee3\u7801",permalink:"/blog/2022/10/14/git.daemon"}},u={authorsImageUrls:[void 0]},c=[{value:"Refer",id:"refer",level:2},{value:"Runtime\u3001\u89e3\u91ca\u5668",id:"runtime\u89e3\u91ca\u5668",level:2},{value:"Faster CPython",id:"faster-cpython",level:3},{value:"PEP 659 -- Draft",id:"pep-659----draft",level:4},{value:"\u52a0\u8f7d\u8fc7\u7a0b\u52a0\u5feb",id:"\u52a0\u8f7d\u8fc7\u7a0b\u52a0\u5feb",level:4},{value:"\u8fd0\u884c\u901f\u5ea6\u52a0\u5feb",id:"\u8fd0\u884c\u901f\u5ea6\u52a0\u5feb",level:4},{value:"PEP 657 -- traceback \u4e2d\u5305\u542b\u7ec6\u7c92\u5ea6\u9519\u8bef\u4fe1\u606f",id:"pep-657----traceback-\u4e2d\u5305\u542b\u7ec6\u7c92\u5ea6\u9519\u8bef\u4fe1\u606f",level:3},{value:"\u8bed\u8a00\uff08\u8bed\u6cd5\u3001\u8bcd\u6cd5\uff09",id:"\u8bed\u8a00\u8bed\u6cd5\u8bcd\u6cd5",level:2},{value:"PEP 654 -- Exception Groups and <code>except*</code>",id:"pep-654----exception-groups-and-except",level:3},{value:"\u521b\u5efa",id:"\u521b\u5efa",level:4},{value:"\u63d0\u53d6\u5b50\u96c6\uff1a<code>subgroup</code>",id:"\u63d0\u53d6\u5b50\u96c6subgroup",level:4},{value:"\u62c6\u5206\u6210 2 \u4e2a\u5b50\u96c6\uff1a<code>split</code>",id:"\u62c6\u5206\u6210-2-\u4e2a\u5b50\u96c6split",level:4},{value:"\u521b\u5efa\u5b50\u7c7b\uff1a<code>derive</code>",id:"\u521b\u5efa\u5b50\u7c7bderive",level:4},{value:"\u5f02\u5e38\u5904\u7406",id:"\u5f02\u5e38\u5904\u7406",level:4},{value:"<code>try...except*</code>",id:"tryexcept",level:4},{value:"Naked Exception",id:"naked-exception",level:4},{value:"\u5728 <code>except*</code> \u4e2d\u5f15\u53d1\u5f02\u5e38",id:"\u5728-except-\u4e2d\u5f15\u53d1\u5f02\u5e38",level:4},{value:"\u7981\u6b62 <code>except</code> &amp; <code>except*</code> \u6df7\u7528",id:"\u7981\u6b62-except--except-\u6df7\u7528",level:4},{value:"\u6355\u83b7 <code>ExceptionGroup</code>\u3001<code>BaseExceptionGroup</code> \u4f7f\u7528 <code>except</code> \u800c\u4e0d\u80fd\u7528 <code>except*</code>",id:"\u6355\u83b7-exceptiongroupbaseexceptiongroup-\u4f7f\u7528-except-\u800c\u4e0d\u80fd\u7528-except",level:4},{value:"\u7981\u6b62\u4f7f\u7528 <code>except*:</code> \u7a7a\u5339\u914d",id:"\u7981\u6b62\u4f7f\u7528-except-\u7a7a\u5339\u914d",level:4},{value:"\u6807\u51c6\u5e93",id:"\u6807\u51c6\u5e93",level:2},{value:"tomllib: PEP 680",id:"tomllib-pep-680",level:3},{value:"asyncio.TaskGroup",id:"asynciotaskgroup",level:3},{value:"\u590d\u4e60 awaitable",id:"\u590d\u4e60-awaitable",level:4},{value:"\u590d\u4e60 <code>asyncio.gather()</code> &amp; <code>asyncio.wait()</code>",id:"\u590d\u4e60-asynciogather--asynciowait",level:4},{value:"<code>class asyncio.TaskGroup</code>",id:"class-asynciotaskgroup",level:4},{value:"<code>TaskGroup</code>\u3001<code>gather</code>\u3001<code>wait</code> \u5bf9\u6bd4",id:"taskgroupgatherwait-\u5bf9\u6bd4",level:4},{value:"typing.TypeVarTuple: PEP 646",id:"typingtypevartuple-pep-646",level:3},{value:"\u590d\u4e60 TypeVar",id:"\u590d\u4e60-typevar",level:4},{value:"\u590d\u4e60 Generic",id:"\u590d\u4e60-generic",level:4},{value:"\u5b66\u4e60 TypeVarTuple",id:"\u5b66\u4e60-typevartuple",level:4},{value:"typing.Self: PEP 673",id:"typingself-pep-673",level:3},{value:"typing.LiteralString: PEP 675",id:"typingliteralstring-pep-675",level:3},{value:"typing.dataclass_transform: PEP 681",id:"typingdataclass_transform-pep-681",level:3},{value:"\u590d\u4e60 <code>@dataclasses.dataclass</code> \u88c5\u9970\u5668",id:"\u590d\u4e60-dataclassesdataclass-\u88c5\u9970\u5668",level:4},{value:"\u5b66\u4e60 <code>@typing.dataclass_transform</code> \u88c5\u9970\u5668",id:"\u5b66\u4e60-typingdataclass_transform-\u88c5\u9970\u5668",level:4},{value:"typing.TypedDict: PEP 655",id:"typingtypeddict-pep-655",level:3},{value:"getmembers_static",id:"getmembers_static",level:3},{value:"\u7f3a\u9677\u4e0e\u9677\u9631",id:"\u7f3a\u9677\u4e0e\u9677\u9631",level:2}],k={toc:c};function m(e){var n=e.components,t=(0,r.Z)(e,l);return(0,p.kt)("wrapper",(0,a.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Python 3.11 \u4e8e 2022.10.24 \u53d1\u5e03\u6b63\u5f0f\u7248 3.11.0\uff0c\u5386\u7ecf 1 \u5e74\u5f00\u53d1\u548c\u6d4b\u8bd5\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"2021.10 - 2022.04\uff1a\u53d1\u5e03 7 \u4e2a a \u7248\u672c\uff1b"),(0,p.kt)("li",{parentName:"ul"},"2022.05 - 2022.07\uff1a\u53d1\u5e03 5 \u4e2a b \u7248\u672c\uff1b"),(0,p.kt)("li",{parentName:"ul"},"2022.8.8\uff1arc1"),(0,p.kt)("li",{parentName:"ul"},"2022.9.12\uff1arc2"),(0,p.kt)("li",{parentName:"ul"},"2022.10.24\uff1a3.11.0")),(0,p.kt)("p",null,"\u91cd\u70b9\u65b0\u7279\u6027\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"Runtime\u3001\u89e3\u91ca\u5668",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"Faster Cpython"),(0,p.kt)("li",{parentName:"ul"},"bytecode \u4e2d\u6dfb\u52a0\u504f\u79fb\u91cf\u5bf9\u5e94\u5173\u7cfb\uff0c\u4ee5\u4fbf traceback \u4e2d\u6307\u660e\u51fa\u9519\u4f4d\u7f6e"))),(0,p.kt)("li",{parentName:"ul"},"\u8bed\u8a00\uff08\u8bed\u6cd5\u3001\u8bcd\u6cd5\uff09",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u65b0\u589e\u201c\u5f02\u5e38\u7ec4\u201d\uff1a",(0,p.kt)("inlineCode",{parentName:"li"},"ExceptionGroup")," & ",(0,p.kt)("inlineCode",{parentName:"li"},"try...except*")))),(0,p.kt)("li",{parentName:"ul"},"\u6807\u51c6\u5e93",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u65b0\u589e ",(0,p.kt)("inlineCode",{parentName:"li"},"tomllib")," \u6a21\u5757"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"asyncio")," \u6a21\u5757",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u65b0\u589e\u201c\u4efb\u52a1\u7ec4\u201d\uff1a",(0,p.kt)("inlineCode",{parentName:"li"},"asyncio.TaskGroup")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Task")," \u65b0\u589e ",(0,p.kt)("inlineCode",{parentName:"li"},"cancelling()"),", ",(0,p.kt)("inlineCode",{parentName:"li"},"uncancel()")," \u65b9\u6cd5"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"inspect")," \u6a21\u5757",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u65b0\u589e ",(0,p.kt)("inlineCode",{parentName:"li"},"getmembers_static()")))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"dataclasses")," \u6a21\u5757"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"typing")," \u6a21\u5757",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u589e\u52a0 ",(0,p.kt)("inlineCode",{parentName:"li"},"typing.TypeVarTuple")),(0,p.kt)("li",{parentName:"ul"},"\u589e\u52a0 ",(0,p.kt)("inlineCode",{parentName:"li"},"typing.Self")),(0,p.kt)("li",{parentName:"ul"},"\u589e\u52a0 ",(0,p.kt)("inlineCode",{parentName:"li"},"typing.LiteralString")),(0,p.kt)("li",{parentName:"ul"},"\u589e\u52a0 ",(0,p.kt)("inlineCode",{parentName:"li"},"typing.TypedDict"))))))),(0,p.kt)("p",null,"\u672c\u6587\u6765\u5bfc\u8bfb\u4e00\u4e0b\u8fd9\u4e2a\u521a\u521a\u6b63\u5f0f\u63ed\u5f00\u9762\u7eb1\u7684\u65b0\u7248\u672c\u3002"),(0,p.kt)("h2",{id:"refer"},"Refer"),(0,p.kt)("p",null,"\u672c\u6587\u5185\u5bb9\u5927\u591a\u6e90\u81ea\u4e0b\u9762\u6587\u6863\uff0c\u53ca\u5176\u6587\u6863\u4e2d\u7684\u76f8\u5173\u94fe\u63a5\u6587\u6863\u3002"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("a",{parentName:"li",href:"https://www.python.org/downloads/release/python-3110/"},"Python 3.11.0 Release"),": 2022.10.24"),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("a",{parentName:"li",href:"https://docs.python.org/release/3.11.0/whatsnew/index.html"},"What\u2019s New In Python 3.11"),"\uff08",(0,p.kt)("a",{parentName:"li",href:"https://docs.python.org/release/3.11.0/whatsnew/changelog.html?utm_source=pocket_saves"},"Changelog"),"\uff09"),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0664/"},"PEP 664 - 3.11 Release Schedule"))),(0,p.kt)("h2",{id:"runtime\u89e3\u91ca\u5668"},"Runtime\u3001\u89e3\u91ca\u5668"),(0,p.kt)("h3",{id:"faster-cpython"},"Faster CPython"),(0,p.kt)("p",null,"2020 \u5e74\u5e95\u4e00\u4f4d\u666e\u901a python \u5f00\u53d1\u8005 Mark \u63d0\u51fa\u4e86\u6b64\u8ba1\u5212\uff0c2021 \u5e74 5 \u6708\u5f97\u5230 python \u4e4b\u7236 Guio \u7684\u52a0\u5165\uff0c\u5fae\u8f6f\u6295\u8d44\u6210\u7acb\u4e86\u4e00\u4e2a\u4e13\u95e8\u5c0f\u7ec4\u2026\u2026\u5c0f\u7ec4\u6210\u529f\u843d\u5b9e\u5230 python3.11 \u4e2d\uff0cMark \u4e5f\u88ab\u5fae\u8f6f\u8058\u7528\u4e86\u3002"),(0,p.kt)("p",null,"\u6b64\u8ba1\u5212\u7684\u4e3b\u8981\u5de5\u4f5c\u5185\u5bb9\u6709\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"PEP659\uff1apython \u89e3\u91ca\u5668\u7528\u4e13\u4e1a\u5316\uff08spectifaction\uff09\u6307\u4ee4\u81ea\u9002\u5e94\u66ff\u6362\u539f\uff08\u9ad8\u9891\uff09\u6307\u4ee4\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u8fd0\u884c\u65f6\u66f4\u5feb\u7684\u52a0\u8f7d\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u51cf\u5c0f\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff1a\u5806\u6808\u5e27\uff08frame\uff09\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58\u548c\u66f4\u5feb\u7684\u8bbe\u8ba1\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u201c\u96f6\u5f00\u9500\u201d\u5f02\u5e38\u5904\u7406\u3002")),(0,p.kt)("p",null,"\u53f7\u79f0\uff1aPython 3.11 \u6bd4 Python 3.10 \u5feb 10-60%\uff0c\u5e73\u5747 25%\u30023.11.0 \u53ea\u662f\u4e00\u4e2a\u5f00\u59cb\uff0c\u540e\u7eed\u7248\u672c\u4f1a\u6301\u7eed\u53d1\u529b\u3002"),(0,p.kt)("h4",{id:"pep-659----draft"},(0,p.kt)("a",{parentName:"h4",href:"https://peps.python.org/pep-0659/"},"PEP 659")," -- Draft"),(0,p.kt)("p",null,"\u4e3a\u201c\u4e13\u4e1a\u5316\u201d\u6307\u4ee4\u5f00\u53d1\u201c\u81ea\u9002\u5e94\u201d\u5f62\u5f0f\uff0c\u79f0\u4e4b\u4e3a\uff1a\u81ea\u9002\u5e94\u6307\u4ee4\u3002\u4e00\u65e6\u4ee3\u7801\u4e2d\u6307\u4ee4\u6267\u884c\u4e86\u8db3\u591f\u591a\u7684\u6b21\u6570\uff0c\u8be5\u6307\u4ee4\u5c31\u4f1a\u88ab\u201c\u4e13\u4e1a\u5316\u201d\uff0c\u5373\u66ff\u6362\u4e3a\u66f4\u5feb\u7684\u3001\u65b0\u7684\u3001\u81ea\u9002\u5e94\u6307\u4ee4\u3002\u2014\u2014 \u6b64\u8fc7\u7a0b\u79f0\u4e4b\u4e3a\u201c",(0,p.kt)("strong",{parentName:"p"},"\u52a0\u901f\uff08Quickening\uff09"),"\u201d\u3002"),(0,p.kt)("p",null,"\u4e0e\u73b0\u6709\u7684 bytecode \u76f8\u6bd4\uff0cquickening \u7684\u4f18\u70b9\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u8fd0\u884c\u65f6\u66f4\u6539\uff1a\u6307\u4ee4\u66ff\u6362\u662f\u8fd0\u884c\u65f6\u81ea\u52a8\u53d1\u751f\u7684"),(0,p.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5f00\u53d1\u51fa super-instructions\uff1a\u8de8\u591a\u884c\u3001\u591a\u64cd\u4f5c\u6570"),(0,p.kt)("li",{parentName:"ul"},"\u4e0d\u9700\u8981\u5904\u7406 tracing\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u9000\u56de\u5230 bytecode \u6267\u884c tracing")),(0,p.kt)("p",null,"eg: ",(0,p.kt)("inlineCode",{parentName:"p"},"LOAD_ATTR")," \u66ff\u6362\u4e3a ",(0,p.kt)("inlineCode",{parentName:"p"},"LOAD_ATTR_ADAPTIVE"),"\u3002"),(0,p.kt)("h4",{id:"\u52a0\u8f7d\u8fc7\u7a0b\u52a0\u5feb"},"\u52a0\u8f7d\u8fc7\u7a0b\u52a0\u5feb"),(0,p.kt)("p",null,"Python \u5c06 bytecode \u7f13\u5b58\u5728 ",(0,p.kt)("inlineCode",{parentName:"p"},"__pycache__")," \u76ee\u5f55\u4e0b\uff0c\uff0c\u4ee5\u52a0\u901f\u6a21\u5757\u52a0\u8f7d\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"3.10\uff1a",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre"},"Read __pycache__ -> Unmarshal -> Heap allocated code object -> Evaluate\n"))),(0,p.kt)("li",{parentName:"ul"},"3.11: core \u6a21\u5757\u88ab ",(0,p.kt)("inlineCode",{parentName:"li"},"frozen"),"(code object & bytecode \u88ab\u9759\u6001\u7f13\u5b58)",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre"},"Statically allocated code object -> Evaluate\n")))),(0,p.kt)("p",null,"\u5b9e\u6d4b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sh"},'(venv310) $ time python -c "pass"\npython -c "pass"  0.01s user 0.00s system 98% cpu 0.019 total\n(venv310) $ time python -c "import os"\npython -c "import os"  0.02s user 0.01s system 98% cpu 0.028 total\n')),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sh"},'(venv311) $ time python -c "pass"\npython -c "pass"  0.02s user 0.00s system 98% cpu 0.017 total\n(venv311) $ time python -c "import os"\npython -c "import os"  0.01s user 0.01s system 97% cpu 0.022 total\n')),(0,p.kt)("p",null,"\u4e00\u70b9\u70b9\u63d0\u5347\uff0c\u4e0d\u662f\u5f88\u660e\u663e\uff0c\u591a\u6b21\u6267\u884c\u8fd8\u6709\u53cd\u590d\u3002"),(0,p.kt)("h4",{id:"\u8fd0\u884c\u901f\u5ea6\u52a0\u5feb"},"\u8fd0\u884c\u901f\u5ea6\u52a0\u5feb"),(0,p.kt)("p",null,"\u51fd\u6570\u8c03\u7528\u65f6 cpython \u4f1a\u521b\u5efa frame \u4fdd\u5b58\u8fd0\u884c\u4fe1\u606f\uff0cframe \u5728 3.11 \u4e2d\u7684\u6539\u53d8\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"Streamlined the frame creation process."),(0,p.kt)("li",{parentName:"ul"},"Avoided memory allocation by generously re-using frame space on the C stack."),(0,p.kt)("li",{parentName:"ul"},"Streamlined the internal frame struct to contain only essential information. Frames previously held extra debugging and memory management information.")),(0,p.kt)("h3",{id:"pep-657----traceback-\u4e2d\u5305\u542b\u7ec6\u7c92\u5ea6\u9519\u8bef\u4fe1\u606f"},(0,p.kt)("a",{parentName:"h3",href:"https://peps.python.org/pep-0657/"},"PEP 657")," -- traceback \u4e2d\u5305\u542b\u7ec6\u7c92\u5ea6\u9519\u8bef\u4fe1\u606f"),(0,p.kt)("p",null,"\u4e4b\u524d\u7684\u7f16\u8bd1\u4fdd\u7559\u4e86\u5b57\u8282\u7801\u5230\u884c\u53f7\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u4f46\u65e0\u6cd5\u6620\u5c04\u5230\u54ea\u4e2a\u8868\u8fbe\u5f0f\uff0cpython11 \u4e2d\u6dfb\u52a0\u4e86\u884c\u53f7\u548c\u504f\u79fb\u91cf\uff08\u65b0\u589e ",(0,p.kt)("inlineCode",{parentName:"p"},"co_positions")," \u5c5e\u6027\uff09\u7528\u4ee5\u5728 traceback \u4e2d\u63d0\u4f9b\u66f4\u65b9\u4fbf\u7684\u5b9a\u4f4d\u4fe1\u606f\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'x = {}\nx["a"] = 0\nx["a"]["b"]["c"] = 1\n')),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"py10",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},'$ python310 main.py\nTraceback (most recent call last):\n  File "/home/me/py311/main.py", line 3, in <module>\n    x["a"]["b"]["c"] = 1\nTypeError: \'int\' object is not subscriptable\n'))),(0,p.kt)("li",{parentName:"ul"},"py311",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},'$ python311 main.py\nTraceback (most recent call last):\n  File "/home/me/py311/main.py", line 3, in <module>\n    x["a"]["b"]["c"] = 1\n    ~~~~~~^^^^^\nTypeError: \'int\' object is not subscriptable\n')),(0,p.kt)("inlineCode",{parentName:"li"},"~~~~~~^^^^^")," \u4e3a\u65b0\u589e\u63d0\u793a\u3002")),(0,p.kt)("p",null,"\u51fd\u6570\u8c03\u7528\u94fe\u4e2d\u4e5f\u80fd\u7a81\u51fa\u663e\u793a\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'def foo():\n    x = {}\n    x["a"] = 0\n    x["a"]["b"]["c"] = 1\n\n\ndef bar():\n    print("foo: %s" % foo())\n\nbar()\n')),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"py10",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-python"},'Traceback (most recent call last):\n  File "/home/me/py311/main.py", line 11, in <module>\n    bar()\n  File "/home/me/py311/main.py", line 8, in bar\n    print("foo: %s" % foo())\n  File "/home/me/py311/main.py", line 4, in foo\n    x["a"]["b"]["c"] = 1\nTypeError: \'int\' object is not subscriptable\n'))),(0,p.kt)("li",{parentName:"ul"},"py311",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-python"},'Traceback (most recent call last):\n  File "/home/me/py311/main.py", line 11, in <module>\n    bar()\n  File "/home/me/py311/main.py", line 8, in bar\n    print("foo: %s" % foo())\n                      ^^^^^\n  File "/home/me/py311/main.py", line 4, in foo\n    x["a"]["b"]["c"] = 1\n    ~~~~~~^^^^^\nTypeError: \'int\' object is not subscriptable\n')),(0,p.kt)("inlineCode",{parentName:"li"},"foo()")," \u548c ",(0,p.kt)("inlineCode",{parentName:"li"},'["b"]')," \u4e0b\u9762\u90fd\u7ed9\u51fa\u4e86\u63d0\u793a\u3002")),(0,p.kt)("h2",{id:"\u8bed\u8a00\u8bed\u6cd5\u8bcd\u6cd5"},"\u8bed\u8a00\uff08\u8bed\u6cd5\u3001\u8bcd\u6cd5\uff09"),(0,p.kt)("h3",{id:"pep-654----exception-groups-and-except"},(0,p.kt)("a",{parentName:"h3",href:"https://peps.python.org/pep-0654/"},"PEP 654")," -- Exception Groups and ",(0,p.kt)("inlineCode",{parentName:"h3"},"except*")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u75db\u70b9")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u5f02\u6b65\u5e93\u5e76\u53d1\u591a\u4efb\u52a1\u5f15\u53d1\u7684\u8fde\u9501\u5f02\u5e38\u6ca1\u6709\u529e\u6cd5\u6574\u5408\u3001\u6c47\u805a\u3001\u5173\u8054\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u76f8\u540c\u64cd\u4f5c\u591a\u6b21\u5c1d\u8bd5\uff08\u5982 ",(0,p.kt)("inlineCode",{parentName:"li"},"socket.create_connection")," \u591a\u6b21\u8fde\u63a5\u90fd\u5931\u8d25\u624d\u505c\u6b62\uff09\u4e2d\u7684\u591a\u4e2a\u5f02\u5e38\u5982\u4f55\u6574\u5408\uff1f"),(0,p.kt)("li",{parentName:"ul"},"\u591a\u4e2a\u56de\u8c03\u51fd\u6570\u4e2d\u82e5\u6709\u5f02\u5e38\u7684\u7b56\u7565\uff1a\u5982 ",(0,p.kt)("inlineCode",{parentName:"li"},"atexit.registry()")," \u5141\u8bb8\u7528\u6237\u6ce8\u518c\u591a\u4e2a\u9000\u51fa\u56de\u8c03\u51fd\u6570\uff0c\u9000\u51fa\u65f6\u4f9d\u6b21\u8fd0\u884c\uff0c\u4f46\u82e5\u5176\u4e2d\u591a\u4e2a\u629b\u4e86\u5f02\u5e38\uff0c\u5219\u7528\u6237\u53ea\u4f1a\u62ff\u5230\u6700\u540e 1 \u4e2a\u3002\u5f88\u591a 3rd \u5e93\u4e5f\u662f\u8fd9\u4e2a\u7b56\u7565\uff0c\u5982 Pytest \u5728 teardown \u4e2d\u6ce8\u518c finalizers\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u590d\u6742\u8ba1\u7b97\u4e2d\u7684\u5f02\u5e38\u901a\u5e38\u96be\u4ee5\u5b9a\u4f4d\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u88c5\u9970\u5668\uff08wrapper\uff09\u4e2d\u7684\u5f02\u5e38\u4f1a\u5c4f\u853d\u6389\u88ab\u5c01\u88c5\u4f53\u7684\u4fe1\u606f\u3002")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u89e3\u51b3\u65b9\u6848")),(0,p.kt)("p",null,"3.11 \u65b0\u589e\u4e86 ",(0,p.kt)("a",{parentName:"p",href:"http://10.7.225.106:8888/python/python-doc/en/python-3.11.0-docs-html/library/exceptions.html#exception-groups"},"ExceptionGroup & BaseExceptionGroup")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"exception ExceptionGroup(msg, excs)\nexception BaseExceptionGroup(msg, excs)\n")),(0,p.kt)("p",null,"\u4ed6\u4fe9\u5728\u6574\u4e2a\u6807\u51c6\u5e93\u5185\u5efa\u5f02\u5e38\u4e2d\u7684\u7ee7\u627f\u5173\u7cfb\u662f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"BaseException\n \u251c\u2500\u2500 BaseExceptionGroup\n \u251c\u2500\u2500 GeneratorExit\n \u251c\u2500\u2500 KeyboardInterrupt\n \u251c\u2500\u2500 SystemExit\n \u2514\u2500\u2500 Exception\n      \u251c\u2500\u2500 ArithmeticError\n      \u2502    \u251c\u2500\u2500 FloatingPointError\n      \u2502    \u251c\u2500\u2500 OverflowError\n      \u2502    \u2514\u2500\u2500 ZeroDivisionError\n      \u251c\u2500\u2500 AssertionError\n      \u251c\u2500\u2500 AttributeError\n      \u251c\u2500\u2500 BufferError\n      \u251c\u2500\u2500 EOFError\n      \u251c\u2500\u2500 ExceptionGroup [BaseExceptionGroup]\n      \u251c\u2500\u2500 ......\n")),(0,p.kt)("h4",{id:"\u521b\u5efa"},"\u521b\u5efa"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'import traceback\ntry:\n    raise ExceptionGroup(\n        "one",\n        [\n            TypeError(1),\n            ExceptionGroup("two", [TypeError(2), ValueError(3)]),\n            ExceptionGroup("three", [OSError(4)]),\n        ],\n    )\nexcept ExceptionGroup as eg:\n    print(eg)         # output: one (3 sub-exceptions)\n    print(eg.message) # output: one\n    traceback.print_exception(eg)\n    # output:\n    # + Exception Group Traceback (most recent call last):\n    # |   File "/home/me/py311/main.py", line 20, in <module>\n    # |     raise ExceptionGroup(\n    # | ExceptionGroup: one (3 sub-exceptions)\n    #   +-+---------------- 1 ----------------\n    #     | TypeError: 1\n    #     +---------------- 2 ----------------\n    #     | ExceptionGroup: two (2 sub-exceptions)\n    #     +-+---------------- 1 ----------------\n    #       | TypeError: 2\n    #       +---------------- 2 ----------------\n    #       | ValueError: 3\n    #       +------------------------------------\n    #     +---------------- 3 ----------------\n    #     | ExceptionGroup: three (1 sub-exception)\n    #     +-+---------------- 1 ----------------\n    #       | OSError: 4\n    #       +------------------------------------\n')),(0,p.kt)("h4",{id:"\u63d0\u53d6\u5b50\u96c6subgroup"},"\u63d0\u53d6\u5b50\u96c6\uff1a",(0,p.kt)("inlineCode",{parentName:"h4"},"subgroup")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'subeg = eg.subgroup(lambda e: isinstance(e, TypeError))\ntraceback.print_exception(subeg)\n# output:\n# + Exception Group Traceback (most recent call last):\n# |   File "/home/me/py311/main.py", line 20, in <module>\n# |     raise ExceptionGroup(\n# | ExceptionGroup: one (2 sub-exceptions)\n#   +-+---------------- 1 ----------------\n#     | TypeError: 1\n#     +---------------- 2 ----------------\n#     | ExceptionGroup: two (1 sub-exception)\n#     +-+---------------- 1 ----------------\n#       | TypeError: 2\n#       +------------------------------------\n')),(0,p.kt)("p",null,"\u6216\u8005\u76f4\u63a5\u5199\u7c7b\u578b"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'subeg = eg.subgroup(ValueError)\ntraceback.print_exception(subeg)\n# output:\n# + Exception Group Traceback (most recent call last):\n# |   File "/home/me/py311/main.py", line 20, in <module>\n# |     raise ExceptionGroup(\n# | ExceptionGroup: one (1 sub-exception)\n# +-+---------------- 1 ----------------\n#   | ExceptionGroup: two (1 sub-exception)\n#   +-+---------------- 1 ----------------\n#     | ValueError: 3\n#     +------------------------------------\n')),(0,p.kt)("p",null,"\u8fd8\u53ef\u4ee5\u4f20\u5165\u5143\u7956\u96c6\u5408"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'subeg = eg.subgroup((OSError, ValueError))\ntraceback.print_exception(subeg)\n# output\uff1a\n# + Exception Group Traceback (most recent call last):\n# |   File "/home/me/py311/main.py", line 20, in <module>\n# |     raise ExceptionGroup(\n# | ExceptionGroup: one (2 sub-exceptions)\n# +-+---------------- 1 ----------------\n#   | ExceptionGroup: two (1 sub-exception)\n#   +-+---------------- 1 ----------------\n#     | ValueError: 3\n#     +------------------------------------\n#   +---------------- 2 ----------------\n#   | ExceptionGroup: three (1 sub-exception)\n#   +-+---------------- 1 ----------------\n#     | OSError: 4\n#     +------------------------------------\n')),(0,p.kt)("h4",{id:"\u62c6\u5206\u6210-2-\u4e2a\u5b50\u96c6split"},"\u62c6\u5206\u6210 2 \u4e2a\u5b50\u96c6\uff1a",(0,p.kt)("inlineCode",{parentName:"h4"},"split")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"subeg1, subeg2 = eg.split(lambda e: isinstance(e, TypeError))\ntraceback.print_exception(subeg1) # \u4e0e\u4e0a\u9762 subeg \u76f8\u540c\ntraceback.print_exception(subeg2) # \u5176\u4f59 2 \u4e2a\u5f02\u5e38\n")),(0,p.kt)("h4",{id:"\u521b\u5efa\u5b50\u7c7bderive"},"\u521b\u5efa\u5b50\u7c7b\uff1a",(0,p.kt)("inlineCode",{parentName:"h4"},"derive")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"subgroup")," \u548c ",(0,p.kt)("inlineCode",{parentName:"p"},"split")," \u5185\u90e8\u8c03\u7528\u7684\u662f\u4e00\u4e2a\u540d\u4e3a ",(0,p.kt)("inlineCode",{parentName:"p"},"derive")," \u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b50\u7c7b\uff08\u4e0e\u539f\u7c7b\u6709\u76f8\u540c\u7684 ",(0,p.kt)("inlineCode",{parentName:"p"},"message"),"\u3001",(0,p.kt)("inlineCode",{parentName:"p"},"__traceback__"),"\u3001",(0,p.kt)("inlineCode",{parentName:"p"},"__cause__"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"__context__")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"__notes__"),"\uff09\uff0c\u4f46\u4f1a\u91cd\u65b0\u505a\u4e00\u4e9b\u5c01\u88c5\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u624b\u5de5\u8c03\u7528 ",(0,p.kt)("inlineCode",{parentName:"p"},"derive")," \u521b\u5efa\u81ea\u5df1\u7684\u5b50\u7c7b\uff0c\u6216\u5728\u7ee7\u627f\u7c7b\u4e2d\u91cd\u8f7d\u6b64\u65b9\u6cd5\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"class BaseExceptionGroup(BaseException, Generic[_BaseExceptionT_co]):\n        def __new__(cls: type[Self], __message: str, __exceptions: Sequence[_BaseExceptionT_co]) -> Self:\n          ...\n\nclass ExceptionGroup(BaseExceptionGroup[_ExceptionT_co], Exception):\n        def __new__(cls: type[Self], __message: str, __exceptions: Sequence[_ExceptionT_co]) -> Self:\n          ...\n")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"\u6ce8\uff1a3.11 \u7684\u6700\u7ec8\u5b9e\u73b0\u4e0e PEP654 \u4e2d\u4e0d\u540c\u3002")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"BaseExceptionGroup")," \u548c ",(0,p.kt)("inlineCode",{parentName:"li"},"ExceptionGroup")," \u6ca1\u6709\u5b9a\u4e49 ",(0,p.kt)("inlineCode",{parentName:"li"},"__init__"),"\uff0c\u4ec5\u5b9a\u4e49\u4e86 ",(0,p.kt)("inlineCode",{parentName:"li"},"__new__")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"__new__(cls,...) -> Self")," \u5b9e\u4f8b\u5316\uff0c\u5165\u53c2\u662f\u5bf9\u8c61\uff0c\u8fd4\u56de\u8be5\u5bf9\u8c61\u7684\u5b9e\u4f8b"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"__init__(self,...)")," \u521d\u59cb\u5316\uff0cself \u5373\u4f7f\u7528 ",(0,p.kt)("inlineCode",{parentName:"li"},"__new__")," \u521b\u5efa\u7684\u5b9e\u4f8b"),(0,p.kt)("li",{parentName:"ul"},"python \u628a\u5b9e\u4f8b\u5316\u548c\u521d\u59cb\u5316\u5206\u5f00\uff0c\u5229\u4e8e\u6211\u4eec\u66f4\u7075\u6d3b\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\uff1a\u53ef\u4ee5\u91cd\u8f7d ",(0,p.kt)("inlineCode",{parentName:"li"},"__new__")," \u65b9\u4fbf\u7684\u5b9e\u73b0\u201c\u5355\u4f8b\u7c7b\u201d")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},'// python \u6e90\u7801: Lib/Objects/exceptions.c\nstatic PyObject *\nBaseExceptionGroup_derive(PyObject *self_, PyObject *args)\n{\n    PyBaseExceptionGroupObject *self = _PyBaseExceptionGroupObject_cast(self_);\n    PyObject *excs = NULL;\n    if (!PyArg_ParseTuple(args, "O", &excs)) {\n        return NULL;\n    }\n    PyObject *init_args = PyTuple_Pack(2, self->msg, excs);\n    if (!init_args) {\n        return NULL;\n    }\n    PyObject *eg = PyObject_CallObject(\n        PyExc_BaseExceptionGroup, init_args);\n    Py_DECREF(init_args);\n    return eg;\n}\n')),(0,p.kt)("p",null,"\u6211\u4eec\u5728 python \u5c42\u91cd\u8f7d\u57fa\u672c 1 \u884c\u5c31\u80fd\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\u4e86\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"class MyExceptionGroup(ExceptionGroup):\n    def derive(self, exc):\n        return MyGroup(self.message, exc)\n")),(0,p.kt)("p",null,"\u76ee\u524d\u611f\u89c9\u521b\u5efa\u5b50\u7c7b\u548c\u521b\u4f5c derive \u65b9\u6cd5\u7528\u5904\u4e0d\u5927\uff0c\u4e0d\u591a\u8bf4\u4e86\u3002"),(0,p.kt)("h4",{id:"\u5f02\u5e38\u5904\u7406"},"\u5f02\u5e38\u5904\u7406"),(0,p.kt)("p",null,"\u6355\u83b7\u5230\u5f02\u5e38\u7ec4\u540e\uff0c\u6211\u4eec\u53ef\u80fd\u5bf9\u8fd9\u4e9b\u5185\u5bb9\u611f\u5174\u8da3\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u7ec4\u91cc\u6709\u591a\u5c11\u4e2a\u5f02\u5e38\uff0c\u6811\u5f62\u7ed3\u6784\u5982\u4f55\uff1f"),(0,p.kt)("li",{parentName:"ol"},"\u6bcf\u4e2a\u53f6\u5b50\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u5f02\u5e38\uff0c\u5982\u4f55\u63d0\u53d6\uff1f"),(0,p.kt)("li",{parentName:"ol"},"\u5f02\u5e38\u7ec4\uff08\u6811\uff09\u4e2d\u662f\u5426\u6709\u91cd\u590d\u5f02\u5e38\uff0c\u6211\u53ef\u4e0d\u5e0c\u671b\u91cd\u590d\u5904\u7406\uff1f")),(0,p.kt)("p",null,"\u6240\u4ee5\u9996\u8981\u4efb\u52a1\u662f\u63d0\u53d6\u51fa\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u5f02\u5e38\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"def leaf_generator(exc, tbs=None):\n    if tbs is None:\n        tbs = []\n\n    tbs.append(exc.__traceback__)\n    if isinstance(exc, BaseExceptionGroup):\n        for e in exc.exceptions:\n            yield from leaf_generator(e, tbs)\n    else:\n        yield exc, tbs\n    tbs.pop()\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'def foo(v):\n    try:\n        raise ValueError(v)\n    except Exception as e:\n        return e\n\ndef bar():\n    raise ExceptionGroup("eg", [foo(1), foo(2)])\n\ntry:\n    bar()\nexcept BaseException as e:\n    eg = e\n\nfor (i, (exc, tbs)) in enumerate(leaf_generator(eg)):\n    print(f"\\n=== Exception #{i+1}:")\n    traceback.print_exception(exc)\n    print(f"The complete traceback for Exception #{i+1}:")\n    for tb in tbs:\n        traceback.print_tb(tb)\n\n# output:\n# === Exception #1:\n# Traceback (most recent call last):\n#   File "/home/me/py311/main.py", line 51, in foo\n#     raise ValueError(v)\n# ValueError: 1\n# The complete traceback for Exception #1:\n#   File "/home/me/py311/main.py", line 61, in <module>\n#     bar()\n#   File "/home/me/py311/main.py", line 57, in bar\n#     raise ExceptionGroup("eg", [foo(1), foo(2)])\n#   File "/home/me/py311/main.py", line 51, in foo\n#     raise ValueError(v)\n#\n# === Exception #2:\n# Traceback (most recent call last):\n#   File "/home/me/py311/main.py", line 51, in foo\n#     raise ValueError(v)\n# ValueError: 2\n# The complete traceback for Exception #2:\n#   File "/home/me/py311/main.py", line 61, in <module>\n#     bar()\n#   File "/home/me/py311/main.py", line 57, in bar\n#     raise ExceptionGroup("eg", [foo(1), foo(2)])\n#   File "/home/me/py311/main.py", line 51, in foo\n#     raise ValueError(v)\n')),(0,p.kt)("h4",{id:"tryexcept"},(0,p.kt)("inlineCode",{parentName:"h4"},"try...except*")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"try:\n    ...\nexcept* SpamError:\n    ...\nexcept* FooError as e:\n    ...\nexcept* (BarError, BazError) as e:\n    ...\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"except*")," \u8868\u793a\u6bcf\u4e2a\u5b50\u53e5\u53ef\u4ee5\u5904\u7406\u591a\u4e2a\u5f02\u5e38\uff0c\u53ef\u4ee5\u5339\u914d\u5f02\u5e38\u7ec4\uff0c\u53ca\u5176\u5b50\u7ec4\u3002\u5f53\u5339\u914d\u5b50\u7ec4\u540e\uff0c\u5269\u4f59\u7684\u5f02\u5e38\u6709\u540e\u7eed\u7684 ",(0,p.kt)("inlineCode",{parentName:"p"},"except*")," \u5339\u914d\u3002"),(0,p.kt)("p",null,"\u6240\u4ee5\uff0c\u4e00\u4e2a\u5f02\u5e38\u7ec4\u53ef\u80fd\u5bfc\u81f4\u591a\u4e2a ",(0,p.kt)("inlineCode",{parentName:"p"},"except*")," \u88ab\u547d\u4e2d\uff0c\u4f46\u6bcf\u6b21\u547d\u4e2d\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"try:\n    raise ExceptionGroup(\n        \"one\",\n        [\n            TypeError(1),\n            ExceptionGroup(\"two\", [TypeError(2), ValueError(3)]),\n            ExceptionGroup(\"three\", [OSError(4)]),\n        ],\n    )\nexcept* (ValueError, OSError) as eg:\n    # \u53ea\u4f1a\u547d\u4e2d\u5e76\u6267\u884c\u4e00\u6b21\uff0c\u4e0d\u4f1a\u8fdb\u6765\u4e24\u6b21\n    # \u539f\u7406\u662f\uff1aeg = origin_eg.subgroup((ValueError, OSError))\n    print(f\"ValueError and OSError: {eg!r}\" )\nexcept* TypeError as eg:\n    print(f\"TypeError: {eg!r}\" )\n\n# output\uff1a\n# ValueError and OSError: ExceptionGroup('one', [ExceptionGroup('two', [ValueError(3)]), ExceptionGroup('three', [OSError(4)])])\n# TypeError: ExceptionGroup('one', [TypeError(1), ExceptionGroup('two', [TypeError(2)])])\n")),(0,p.kt)("h4",{id:"naked-exception"},"Naked Exception"),(0,p.kt)("p",null,"python \u5c06 ",(0,p.kt)("inlineCode",{parentName:"p"},"raise")," \u540e\u9762\u6ca1\u6709\u5177\u4f53\u5f02\u5e38\u7684\u7528\u6cd5\u79f0\u4e3a\u88f8\u5f02\u5e38\u3002\u88f8\u5f02\u5e38\u901a\u5e38\u5728 ",(0,p.kt)("inlineCode",{parentName:"p"},"except")," \u4e2d\u518d\u6b21\u629b\u51fa\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"try:\n    try:\n        raise BlockingIOError\n    except Exception as e:\n        print(repr(e))\n        raise\nexcept Exception as e:\n    print(repr(e))\n# output:\n# BlockingIOError()\n# BlockingIOError()\n")),(0,p.kt)("p",null,"\u4f46\u6b64\u65f6\u5373\u4f7f\u4e0d\u662f\u88f8\u5f02\u5e38\uff0c\u8f93\u51fa\u4e5f\u662f\u4e00\u6837\u7684\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"try:\n    try:\n        raise BlockingIOError\n    except Exception as e:\n        print(repr(e))\n        raise e\nexcept Exception as e:\n    print(repr(e))\n# output:\n# BlockingIOError()\n# BlockingIOError()\n")),(0,p.kt)("p",null,"\u90a3\u533a\u522b\u662f\u662f\u4ec0\u4e48\uff1f\u2014\u2014 \u88f8\u5f02\u5e38\u5728 ",(0,p.kt)("inlineCode",{parentName:"p"},"except")," \u4e2d\u4e8c\u6b21\u5f15\u53d1\u5f02\u5e38\u65f6\uff0c",(0,p.kt)("inlineCode",{parentName:"p"},"raise")," \u548c ",(0,p.kt)("inlineCode",{parentName:"p"},"raise e")," \u5e76\u4e0d\u7b49\u6548\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"raise"),": \u4e0d\u4f1a\u5c06\u5f53\u524d frame \u6dfb\u52a0\u5230\u8c03\u7528\u6808\u91cc\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"raise e"),": \u4f1a\u6dfb\u52a0\u3002")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'def foobar():\n    try:\n        1 / 0\n    except ZeroDivisionError:\n        raise\n\nfoobar()\n# output:\n# Traceback (most recent call last):\n#   File "/home/me/py311/main.py", line 146, in <module>\n#     foobar()\n#   File "/home/me/py311/main.py", line 141, in foobar\n#     1 / 0\n#     ~~^~~\n# ZeroDivisionError: division by zer\n')),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'def foobar():\n    try:\n        1 / 0\n    except ZeroDivisionError as e:\n        raise e\n\nfoobar()\n# output:\n# Traceback (most recent call last):\n#   File "/home/me/py311/main.py", line 146, in <module>\n#     foobar()\n#   File "/home/me/py311/main.py", line 143, in foobar\n#     raise e\n#   File "/home/me/py311/main.py", line 141, in foobar\n#     1 / 0\n#     ~~^~~\n# ZeroDivisionError: division by zero\n')),(0,p.kt)("p",null,"\u8bf4\u56de\u5f02\u5e38\u7ec4\uff0c\u5f53\u5728 ",(0,p.kt)("inlineCode",{parentName:"p"},"try...except*")," \u4e2d\u6355\u83b7\u5230\u4e00\u822c\u5f02\u5e38\uff0c\u800c\u4e0d\u662f\u5f02\u5e38\u7ec4\u65f6\uff0c\u6b64\u65f6\u7684\u4e00\u822c\u5f02\u5e38\u5bf9\u4e8e ",(0,p.kt)("inlineCode",{parentName:"p"},"except*")," \u6765\u8bf4\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u88f8\u5f02\u5e38\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"try:\n    raise BlockingIOError\nexcept* OSError as eg: # BlockingIOError \u662f OSError \u7684\u5b50\u7c7b\n    print(repr(eg))\n    # output:\n    # ExceptionGroup('', (BlockingIOError(),))\n")),(0,p.kt)("p",null,"\u5f53\u7528 ",(0,p.kt)("inlineCode",{parentName:"p"},"except*")," \u6355\u83b7\u5230\u88f8\u5f02\u5e38\uff0c\u5219\u751f\u6210\u4e00\u4e2a message \u4e3a\u7a7a\u7684 ",(0,p.kt)("inlineCode",{parentName:"p"},'ExceptionGroup("", <\u666e\u901a\u5f02\u5e38>)'),"\u3002"),(0,p.kt)("h4",{id:"\u5728-except-\u4e2d\u5f15\u53d1\u5f02\u5e38"},"\u5728 ",(0,p.kt)("inlineCode",{parentName:"h4"},"except*")," \u4e2d\u5f15\u53d1\u5f02\u5e38"),(0,p.kt)("p",null,"\u6211\u4eec\u7ee7\u7eed\u6765\u7814\u7a76\u4e8c\u6b21\u629b\u51fa\u5f02\u5e38\u7684\u95ee\u9898\uff0c\u770b\u770b\u5f02\u5e38\u7ec4\u662f\u5982\u4f55\u5904\u7406\u7684\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u9690\u5f0f\u629b\u51fa\uff08\u4e8c\u6b21\u629b\u51fa\u88f8\u5f02\u5e38\uff09")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"try:\n    try:\n        raise ExceptionGroup(\n            \"eg\",\n            [\n                ValueError(1),\n                TypeError(2),\n                OSError(3),\n                ExceptionGroup(\"nested\", [ValueError(4), TypeError(5), OSError(6)]),\n            ],\n        )\n    except* ValueError as e:\n        print(f\"*ValueError: {e!r}\") # [1,[4]]\n        raise                        # \u9690\u5f0f\u629b\u51fa\uff08\u4e8c\u6b21\u629b\u51fa\u88f8\u5f02\u5e38\uff09\n    except* OSError as e:\n        print(f\"*OSError: {e!r}\") # [3,[6]]\nexcept ExceptionGroup as e:\n    print(repr(e)) # [1,2,[4,5]]\n# output:\n# *ValueError: ExceptionGroup('eg', [ValueError(1), ExceptionGroup('nested', [ValueError(4)])])\n# *OSError: ExceptionGroup('eg', [OSError(3), ExceptionGroup('nested', [OSError(6)])])\n# ExceptionGroup('eg', [ValueError(1), TypeError(2), ExceptionGroup('nested', [ValueError(4), TypeError(5)])])\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u663e\u5f0f\u629b\u51fa\uff08\u4e8c\u6b21\u629b\u51fa\u975e\u88f8\u5f02\u5e38\uff09")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"try:\n    try:\n        raise ExceptionGroup(\n            \"eg\",\n            [\n                ValueError(1),\n                TypeError(2),\n                OSError(3),\n                ExceptionGroup(\"nested\", [ValueError(4), TypeError(5), OSError(6)]),\n            ],\n        )\n    except* ValueError as e:\n        print(f\"*ValueError: {e!r}\")  # [1,[4]]\n        raise e                       # \u663e\u5f0f\u629b\u51fa\uff08\u4e8c\u6b21\u629b\u51fa\u975e\u88f8\u5f02\u5e38\uff09\n    except* OSError as e:\n        print(f\"*OSError: {e!r}\")  # [3,[6]]\nexcept ExceptionGroup as e:\n    print(repr(e))  # [1,[4]],[2,[5]]\n# output:\n# *ValueError: ExceptionGroup('eg', [ValueError(1), ExceptionGroup('nested', [ValueError(4)])])\n# *OSError: ExceptionGroup('eg', [OSError(3), ExceptionGroup('nested', [OSError(6)])])\n# ExceptionGroup('', [\n#   ExceptionGroup('eg', [\n#       ValueError(1),\n#       ExceptionGroup('nested', [\n#           ValueError(4)\n#       ])\n#   ]),\n#   ExceptionGroup('eg', [\n#       TypeError(2),\n#       ExceptionGroup('nested', [TypeError(5)])\n#   ])\n# ])\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u94fe\u5f0f\u629b\u51fa\uff08Chaining\uff09\uff1a\u6355\u83b7\u5230\u5f02\u5e38\u540e\uff0c\u91cd\u65b0\u629b\u51fa\u4e00\u4e2a\u65b0\u5f02\u5e38\u3002")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'try:\n    try:\n        raise ExceptionGroup("eg", [ValueError("a")])\n    except* ValueError as e:\n        raise KeyError(e) # \u53e6\u4e00\u79cd\u5199\u6cd5\uff1a\nexcept ExceptionGroup as e:\n    print(repr(e))\n    # output\uff1a\n    # ExceptionGroup(\'\', [KeyError(ExceptionGroup(\'eg\', [ValueError(\'a\')]))])\n    traceback.print_exception(e)\n    # output:\n    #   | ExceptionGroup:  (1 sub-exception)\n    #   +-+---------------- 1 ----------------\n    #     | Exception Group Traceback (most recent call last):\n    #     |   File "/home/me/py311/main.py", line 142, in <module>\n    #     |     raise ExceptionGroup("eg", [ValueError("a")])\n    #     | ExceptionGroup: eg (1 sub-exception)\n    #     +-+---------------- 1 ----------------\n    #       | ValueError: a\n    #       +------------------------------------\n    #     |\n    #     | During handling of the above exception, another exception occurred:\n    #     |\n    #     | Traceback (most recent call last):\n    #     |   File "/home/me/py311/main.py", line 144, in <module>\n    #     |     raise KeyError(e)\n    #     | KeyError: ExceptionGroup(\'eg\', [ValueError(\'a\')])\n')),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u603b\u7ed3"),"\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u9690\u5f0f\u629b\u51fa\u5f97\u5230 ",(0,p.kt)("inlineCode",{parentName:"li"},"[1,2,[4,5]]"),"\uff0c\u663e\u5f0f\u629b\u51fa\u5f97\u5230 ",(0,p.kt)("inlineCode",{parentName:"li"},"[1,[4]],[2,[5]]"),"\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u6700\u5916\u5c42\u7684\u5f02\u5e38\u6355\u83b7\u5728\u505a\u201c\u805a\u5408\u201d\u64cd\u4f5c\uff1a\u91cd\u65b0\u629b\u5f03\u7684\u5f02\u5e38\u548c\u672a\u5904\u7406\u7684\u5f02\u5e38\u88ab\u805a\u5408\u5728\u4e00\u8d77\u3002",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u9690\u5f0f\u629b\u51fa\u7684\u805a\u5408\u7ed3\u6784\u4e0e\u539f\u59cb\u5f02\u5e38\u7ec4\u4e00\u81f4\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u663e\u5f0f\u629b\u51fa\u7684\u805a\u5408\u7ed3\u6784\u662f\u5c06\u88ab\u629b\u5f02\u5e38\u4e0e\u672a\u5904\u7406\u5f02\u5e38\u505a\u62fc\u63a5\uff0c\u5f97\u5230\u65b0\u7684\u5f02\u5e38\u7ec4\u3002"))),(0,p.kt)("li",{parentName:"ul"},"\u94fe\u5f0f\u629b\u51fa\uff1a\u5728\u6070\u5f53\u7684\u4f4d\u7f6e\u5f97\u5230 ",(0,p.kt)("inlineCode",{parentName:"li"},"During handling of the above exception, another exception occurred:")," \u7684\u63d0\u793a\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"except*")," \u4e2d\u6784\u9020\u800c\u5f02\u5e38\u7ec4\u662f\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u4e0d\u4f1a\u5f71\u54cd\u539f\u5f02\u5e38\u7ec4\u7684\u7ed3\u6784\u3002")),(0,p.kt)("h4",{id:"\u7981\u6b62-except--except-\u6df7\u7528"},"\u7981\u6b62 ",(0,p.kt)("inlineCode",{parentName:"h4"},"except")," & ",(0,p.kt)("inlineCode",{parentName:"h4"},"except*")," \u6df7\u7528"),(0,p.kt)("p",null,"flake8 \u5df2\u7ecf\u80fd\u62a5\u9519\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"SyntaxError: cannot have both 'except' and 'except*' on the same 'try'flake8(E999)\n")),(0,p.kt)("h4",{id:"\u6355\u83b7-exceptiongroupbaseexceptiongroup-\u4f7f\u7528-except-\u800c\u4e0d\u80fd\u7528-except"},"\u6355\u83b7 ",(0,p.kt)("inlineCode",{parentName:"h4"},"ExceptionGroup"),"\u3001",(0,p.kt)("inlineCode",{parentName:"h4"},"BaseExceptionGroup")," \u4f7f\u7528 ",(0,p.kt)("inlineCode",{parentName:"h4"},"except")," \u800c\u4e0d\u80fd\u7528 ",(0,p.kt)("inlineCode",{parentName:"h4"},"except*")),(0,p.kt)("p",null,"flake8 & pylint \u5f53\u524d\u65e0\u6cd5\u9759\u6001\u68c0\u67e5\uff0c\u4f46\u8fd0\u884c\u65f6\u4f1a\u62a5\u9519\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'except* ExceptionGroup:\n    ...\n# Traceback (most recent call last):\n#   File "/home/me/py311/main.py", line 152, in <module>\n#     except* ExceptionGroup:\n# TypeError: catching ExceptionGroup with except* is not allowed. Use except instead.\n')),(0,p.kt)("h4",{id:"\u7981\u6b62\u4f7f\u7528-except-\u7a7a\u5339\u914d"},"\u7981\u6b62\u4f7f\u7528 ",(0,p.kt)("inlineCode",{parentName:"h4"},"except*:")," \u7a7a\u5339\u914d"),(0,p.kt)("p",null,"flake8 \u5df2\u7ecf\u80fd\u62a5\u9519\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"SyntaxError: expected one or more exception typesflake8(E999)\n")),(0,p.kt)("h2",{id:"\u6807\u51c6\u5e93"},"\u6807\u51c6\u5e93"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://pybit.es/articles/finding-new-and-removed-python-3-11-modules-in-8-lines-of-code/"},"8 \u884c\u4ee3\u7801\u627e\u5230 3.11 \u6807\u51c6\u5e93\u7684\u53d8\u66f4"),":"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# python3.10 REPL - pickling module names\n>>> import sys\n>>> with open(\"mods\", \"wb\") as f:\n...     pickle.dump(sys.stdlib_module_names, f)\n\n# python3.11 REPL - compare\n>>> import sys\n>>> with open(\"mods\", \"rb\") as f:\n...     mods_310 = pickle.load(f)\n\n# added\n>>> sys.stdlib_module_names - mods_310\nfrozenset({'_typing', '_scproxy', '_tokenize', 'tomllib'})\n# removed\n>>> mods_310 - sys.stdlib_module_names\nfrozenset({'binhex'})\n")),(0,p.kt)("h3",{id:"tomllib-pep-680"},"tomllib: ",(0,p.kt)("a",{parentName:"h3",href:"https://peps.python.org/pep-0680/"},"PEP 680")),(0,p.kt)("p",null,"\u6807\u51c6\u5e93\u65b0\u589e\u4e86 TOML \u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u7684\u89e3\u6790\u5e93\u3002\u867d\u7136 toml \u683c\u5f0f\u5df2\u7ecf\u5b58\u5728\u4e86\u5341\u591a\u5e74\uff0c\u4f46 python \u5e76\u6ca1\u6709\u5f15\u5165\u6807\u51c6\u5e93\u3002"),(0,p.kt)("p",null,"python \u540c\u65f6\u4e5f\u8868\u660e\u4ee5\u540e\u5305\u6216\u9879\u76ee\u7684\u5143\u6570\u636e TOML \u5c06\u4f5c\u4e3a\u9996\u9009\u683c\u5f0f\u3002"),(0,p.kt)("p",null,"pytp \u7684 pyproject.toml\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yml"},'[build-system]\nrequires = ["setuptools", "wheel"]\n\n[tool.black]`\nline-length = 88`\ntarget-version = [\'py37\']\n\n[tool.flake8]\nline-length = 88\n')),(0,p.kt)("p",null,"\u5bf9\u4e8e ",(0,p.kt)("inlineCode",{parentName:"p"},"[foo.bar]")," \u662f\u62c6\u5206\u4e3a 2 \u4e2a\u7d22\u5f15\u7684\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"import tomllib\n\nwith open(\"pyproject.toml\", \"rb\") as f:\n    data = tomllib.load(f)\n    print(type(data))             # <class 'dict'>\n    print(data[\"build-system\"])   # {'requires': ['setuptools', 'wheel']}\n    print(data[\"tool\"])\n    print(data[\"tool\"][\"black\"])  # {'line-length': 88, 'target-version': ['py37']}\n    print(data[\"tool\"][\"flake8\"]) # {'line-length': 88}\n")),(0,p.kt)("h3",{id:"asynciotaskgroup"},(0,p.kt)("a",{parentName:"h3",href:"http://10.7.225.106:8888/python/python-doc/cn/python-3.11.0-docs-html/library/asyncio-task.html#asyncio.TaskGroup"},"asyncio.TaskGroup")),(0,p.kt)("p",null,"\u65b0\u589e ",(0,p.kt)("inlineCode",{parentName:"p"},"asyncio.TaskGroup")," \u672a\u6765\u7528\u4e8e\u66ff\u4ee3 ",(0,p.kt)("inlineCode",{parentName:"p"},"asyncio.gather"),"\u3002"),(0,p.kt)("h4",{id:"\u590d\u4e60-awaitable"},"\u590d\u4e60 awaitable"),(0,p.kt)("p",null,"aws \u662f awaitable \u7684\u590d\u6570\uff0casyncio \u5b9a\u4e49\u4e86 3 \u79cd awaitable \u5bf9\u8c61\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u534f\u7a0b\u5bf9\u8c61\uff08\u6307\u8c03\u7528\u534f\u7a0b\u51fd\u6570\u8fd4\u56de\u7684\u5bf9\u8c61\uff09",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-python"},"async def foobar(i):\n    return i+i\nasync def main():\n    await foobar(1)  # \u80fd\u6267\u884c\uff0c\u4f46\u5f97\u4e0d\u5230\u7ed3\u679c\nasyncio.run(main())\n"))),(0,p.kt)("li",{parentName:"ol"},"task: \u7528\u4e8e\u5e76\u884c\u8c03\u5ea6\u534f\u7a0b\u7684\u5bf9\u8c61\uff0c\u57fa\u4e8e\u534f\u7a0b\u51fd\u6570\u521b\u5efa",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-python"},"...\nasync def main():\n    task = asyncio.create_task(foobar(1))\n    await task\n    print(task.result()) # \u53ef\u4ee5\u901a\u8fc7 task \u5f97\u5230\u7ed3\u679c\uff0ccancel\u7b49\u64cd\u4f5c\n...\n"))),(0,p.kt)("li",{parentName:"ol"},"Futures\uff1a\u5e95\u5c42\u5bf9\u8c61\uff0c\u8868\u793a\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\uff0c\u57fa\u4e8e\u534f\u7a0b\u51fd\u6570\u3001task\u3001future \u548c loop \u521b\u5efa\u3002",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-python"},"...\nasync def main():\n    future = asyncio.ensure_future(foobar(1), loop=...)\n    await future         # \u5176\u5b9e\u6b64\u5904\u4e5f\u662f task\n    print(task.result())\n...\n")))),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"Task \u662f Future \u7684\u5b50\u7c7b"),"\uff0c\u6240\u4ee5\u5177\u6709 Future \u7684 ",(0,p.kt)("inlineCode",{parentName:"li"},"result()"),"\u3001",(0,p.kt)("inlineCode",{parentName:"li"},"done()"),"\u3001",(0,p.kt)("inlineCode",{parentName:"li"},"cancell()"),"\u3001",(0,p.kt)("inlineCode",{parentName:"li"},"add_done_callback")," \u7b49\u65b9\u6cd5\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"ensure_future()")," \u8fd4\u56de\u7684\u5176\u5b9e\u4e5f\u662f Task\uff08\u6240\u4ee5\u6211\u4eec\u771f\u7684\u5f88\u5c11\u9700\u8981\u76f4\u63a5\u63a5\u89e6 Future\uff09\uff0c\u5176\u5b9e ",(0,p.kt)("inlineCode",{parentName:"li"},"ensure_future()")," \u5e95\u5c42\u4e5f\u4f1a\u8c03\u7528 ",(0,p.kt)("inlineCode",{parentName:"li"},"create_task()"),"\uff0c\u6240\u4ee5 Future \u76f8\u6bd4 Task \u662f\u5e95\u5c42\uff0c\u4f46 ",(0,p.kt)("inlineCode",{parentName:"li"},"ensure_future()")," \u76f8\u6bd4 ",(0,p.kt)("inlineCode",{parentName:"li"},"create_task()")," \u5374\u662f\u4e0a\u5c42\u3002")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# python-src/Lib/asyncio/tasks.py\ndef _ensure_future(coro_or_future, *, loop=None):\n    ...\n    if loop is None:\n        loop = events._get_event_loop(stacklevel=4)\n    try:\n        return loop.create_task(coro_or_future)\n    ...\n\ndef create_task(coro, *, name=None, context=None):\n    loop = events.get_running_loop()\n    if context is None:\n        task = loop.create_task(coro)\n    else:\n        task = loop.create_task(coro, context=context)\n    ...\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"ensure_future()")," \u548c ",(0,p.kt)("inlineCode",{parentName:"p"},"create_task()")," \u90fd\u4f1a\u9996\u5148\u83b7\u53d6 loop\uff0c\u524d\u8005\u83b7\u53d6 ",(0,p.kt)("inlineCode",{parentName:"p"},"_get_event_loop"),"\uff0c\u540e\u8005 ",(0,p.kt)("inlineCode",{parentName:"p"},"get_running_loop"),"\uff0c\u6240\u4ee5\u5728\u6ca1\u6709 loop \u7684\u73af\u5883\u4e0b\u6267\u884c\u4f1a\u6709\u5dee\u5f02\uff0c\u6bd4\u5982 py \u6587\u4ef6\u7684\u7b2c\u4e00\u7ea7\u5199\u5982\u4e0b\u4ee3\u7801\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"task = asyncio.create_task(foobar(1)) # error\uff1aRuntimeError: no running event loop \u2014\u2014 \u62a5\u9519\u9000\u51fa\nfutu = asyncio.ensure_future(foobar(2)) # py3.9- PASS; py3.10+: DeprecationWarning: There is no current event loop\n")),(0,p.kt)("p",null,"\u5982\u679c\u5199\u5728\u67d0\u4e2a\u51fd\u6570\u4e2d\uff0c\u7528 ",(0,p.kt)("inlineCode",{parentName:"p"},"asyncio.run()")," \u8c03\u7528\uff0c\u5219\u90fd OK\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"async def main():\n    await asyncio.create_task(foobar(1))\n    await asyncio.ensure_future(foobar(2))\n\nasyncio.run(main())\n")),(0,p.kt)("p",null,"\u4e0a\u9762\u4ee3\u7801\u6f14\u793a\u7684\u90fd\u662f awaitable \u5bf9\u8c61",(0,p.kt)("strong",{parentName:"p"},"\u540c\u6b65\u3001\u4e32\u884c"),"\u6267\u884c\u7684\u65b9\u5f0f\uff08\u901a\u8fc7 ",(0,p.kt)("inlineCode",{parentName:"p"},"await")," \u5173\u952e\u5b57\uff09\uff0c",(0,p.kt)("strong",{parentName:"p"},"\u5f02\u6b65\u3001\u5e76\u53d1"),"\u6267\u884c\u5219\u9700\u8981 ",(0,p.kt)("inlineCode",{parentName:"p"},"asyncio.gather()")," \u6216 ",(0,p.kt)("inlineCode",{parentName:"p"},"asyncio.wait()")," \u4e0a\u573a\u4e86\u3002"),(0,p.kt)("h4",{id:"\u590d\u4e60-asynciogather--asynciowait"},"\u590d\u4e60 ",(0,p.kt)("inlineCode",{parentName:"h4"},"asyncio.gather()")," & ",(0,p.kt)("inlineCode",{parentName:"h4"},"asyncio.wait()")),(0,p.kt)("p",null,"\u51fd\u6570\u7b7e\u540d\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"awaitable asyncio.gather(*aws, return_exceptions=False)\n")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u5e76\u53d1\uff08\u591a\u4e2a awaitable \u4ea4\u66ff\u8fd0\u884c\uff09"),"\u7684\u5178\u578b\u65b9\u6cd5\u662f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"async def foobar(i):\n    _w = random.randint(1, 5)\n    await asyncio.sleep(_w)\n    print(_w, i)\n    return i + i\n\nasync def main():\n    tasks = [asyncio.create_task(foobar(_i)) for _i in range(3)]\n    futus = [asyncio.ensure_future(foobar(_i + 10)) for _i in range(3)]\n    await asyncio.gather(*tasks, *futus) # await asyncio.wait([*tasks, *futus])\n\nasyncio.run(main())\n# output\uff1a\n# 2 12\n# 3 10\n# 4 0\n# 4 1\n# 4 2\n# 5 11\n")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"\u6ce8\uff1a\u4e0a\u4f8b\u4ecd\u662f\u540c\u6b65\u7684\uff0c\u5373\u7ebf\u7a0b\uff08\u534f\u7a0b\uff09\u5728\u7b49\u5f85\u5e76\u53d1\u7684\u534f\u7a0b\u5b8c\u6210\u624d\u7ee7\u7eed\u8d70\u3002\u4f46\u8fd9\u662f\u4e3a\u4e86\u4fbf\u4e8e\u6f14\u793a\uff0c\u5f04\u6e05\u695a\u4e86\u5e76\u53d1\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u5f02\u6b65\u5e76\u4e0d\u662f\u96be\u4e8b\u513f\u3002")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"gather")," \u548c ",(0,p.kt)("inlineCode",{parentName:"p"},"wait")," \u80fd\u8fbe\u5230\u5dee\u4e0d\u591a\u7684\u5e76\u53d1\u6548\u679c\uff0c\u4f46\u5728\u5165\u53c2\u3001\u8fd4\u56de\u503c\u3001\u5982\u4f55\u53d6\u6d88\u7b49\u65b9\u9762\u8fd8\u662f\u6709\u5dee\u5f02\uff1a"),(0,p.kt)("p",null,"\u6587\u6863\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# doc\ncoroutine asyncio.wait(aws, *, timeout=None, return_when=ALL_COMPLETED) -> (done, pending)\nawaitable asyncio.gather(*aws, return_exceptions=False) -> GatheringFuture\n")),(0,p.kt)("p",null,"\u6e90\u7801\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# python_src/Libasyncio/tasks.py\nasync def wait(fs, *, timeout=None, return_when=ALL_COMPLETED):\ndef gather(*coros_or_futures, return_exceptions=False):\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u7b7e\u540d\u4e0d\u540c\uff1a",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u662f\u4e2a\u534f\u7a0b\u51fd\u6570\uff0c\u8fd4\u56de task \u7684\u96c6\u5408\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"await")," \u7684\u662f\u4e2a\u534f\u7a0b\u51fd\u6570\uff1b"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gather")," \u662f\u4e2a\u666e\u901a\u51fd\u6570\uff0c\u8fd4\u56de Future\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"await")," \u8be5 Future \u5f97\u5230 tasks \u7684\u8fd0\u884c\u7ed3\u679c\u5217\u8868\u3002"))),(0,p.kt)("li",{parentName:"ul"},"\u5165\u53c2\u3001\u8fd4\u56de\u503c\u4e0d\u540c\uff1a",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u5165\u53c2\u662f\u4e2a\u65e0\u5e8f\u96c6\u5408\uff0c\u8fd4\u56de\u503c\u4e5f\u662f\u65e0\u5e8f\u7684\uff0c\u8fd8\u662f\u4e2a\u5143\u7956\uff1a",(0,p.kt)("inlineCode",{parentName:"li"},"(\u5df2\u5b8c\u6210, \u672a\u5b8c\u6210)"),"\uff1b"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gather")," \u5165\u53c2\u662f\u4f9d\u6b21\u591a\u4e2a awaitable\uff0c\u8fd4\u56de\u503c\u4e5f\u662f\u4e2a awaitable(\u4e0e\u5165\u53c2\u76f8\u540c\u987a\u5e8f\u7684 list)\u3002")))),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"wait")," \u7684\u5165\u53c2 ",(0,p.kt)("inlineCode",{parentName:"p"},"return_when")," \u6709 3 \u4e2a\u53ef\u9009\u503c\uff0c\u63a7\u5236 ",(0,p.kt)("inlineCode",{parentName:"p"},"wait")," \u51fd\u6570\u7684\u8fd4\u56de\u65f6\u673a\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"ALL_COMPLETED"),"(\u9ed8\u8ba4)\uff1a\u6240\u6709 task \u5b8c\u6210\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u624d\u5b8c\u6210\uff0c\u6b64\u65f6 done \u6709\u5305\u542b\u6240\u6709 task\uff0cpending \u6ca1\u6709 task\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"FIRST_EXCEPTION"),"\uff1a\u67d0\u4e00\u4e2a task \u5f02\u5e38\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u5373\u5b8c\u6210\uff0c\u6b64\u65f6 done\u3001pending \u53ef\u80fd\u90fd\u6709 task\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"FIRST_COMPLETED"),"\uff1a\u67d0\u4e00\u4e2a task \u5b8c\u6210\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u5373\u5b8c\u6210\uff0c\u6b64\u65f6 done \u4ec5\u6709 1 \u4e2a task\uff0cpending \u5305\u542b\u5176\u4ed6 task\u3002\u2014\u2014\u4e0b\u9762\u4ee3\u7801\u6f14\u793a\uff1a")),(0,p.kt)("p",null,"\u4f46\u5373\u4f7f ",(0,p.kt)("inlineCode",{parentName:"p"},"wait")," \u8fd4\u56de\u4e86\uff0c\u5176\u4ed6 task \u8fd8\u662f\u5728\u7ee7\u7eed\u8fd0\u884c\u7684\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"async def foobar(i):\n    _w = random.randint(1, 5)\n    await asyncio.sleep(_w)\n    return (i, _w)\n\nasync def main():\n    tasks = [asyncio.create_task(foobar(_i)) for _i in range(3)]\n    futus = [asyncio.ensure_future(foobar(_i + 10)) for _i in range(3)]\n    done, pending = await asyncio.wait(\n        [*tasks, *futus], return_when=asyncio.FIRST_COMPLETED\n    )\n    print([(_task.get_name(), _task._state, _task.result()) for _task in done])\n    print([(_task.get_name(), _task._state) for _task in pending])\n    await asyncio.sleep(5)\n    print([(_task.get_name(), _task._state, _task.result()) for _task in done])\n    print([(_task.get_name(), _task._state, _task.result()) for _task in pending])\n\nasyncio.run(main())\n\n# output:\n# [('Task-7', 'FINISHED', (12, 1))]\n# [('Task-6', 'PENDING'), ('Task-4', 'PENDING'), ('Task-5', 'PENDING'), ('Task-3', 'PENDING'), ('Task-2', 'PENDING')]\n# [('Task-7', 'FINISHED', (12, 1))]\n# [('Task-6', 'FINISHED', (11, 5)), ('Task-4', 'FINISHED', (2, 5)), ('Task-5', 'FINISHED', (10, 5)), ('Task-3', 'FINISHED', (1, 2)), ('Task-2', 'FINISHED', (0, 2))]\n")),(0,p.kt)("p",null,"\u53ef\u89c1\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u539f\u6765 ",(0,p.kt)("inlineCode",{parentName:"p"},"PENDING")," \u7684 5 \u4e2a task \u90fd ",(0,p.kt)("inlineCode",{parentName:"p"},"FINISHED")," \u4e86\uff0c\u5e76\u4e14\u8ba1\u7b97\u51fa\u4e86\u6b63\u786e\u7684\u7ed3\u679c\u3002"),(0,p.kt)("p",null,"\u4f46\u662f\u5982\u679c\u9047\u5230\u67d0\u4e2a\uff08\u4e9b\uff09 task \u629b\u5f02\u5e38\uff0c",(0,p.kt)("inlineCode",{parentName:"p"},"wait")," \u7684\u8868\u73b0\u4f1a\u5f88\u602a\u5f02\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"async def foobar(i):\n    _w = random.randint(0, 5)\n    await asyncio.sleep(_w)\n    i / _w  # \u5f53 _w = 0 \u65f6\u5f02\u5e38\n    return (i, _w)\n\n\nasync def main():\n    tasks = [asyncio.create_task(foobar(_i)) for _i in range(3)]\n    futus = [asyncio.ensure_future(foobar(_i + 10)) for _i in range(3)]\n    try:\n        done, pending = await asyncio.wait(\n            [*tasks, *futus], return_when=asyncio.ALL_COMPLETED\n        )\n    except Exception as e:\n        print(e)\n    finally:\n        print([(_task.get_name(), _task._state) for _task in done])\n        # print([(_task.get_name(), _task._state, _task.result()) for _task in done]) # \u4e3b\u52a8\u5f15\u53d1\u5f02\u5e38\n        print([(_task.get_name(), _task._state) for _task in pending])\n\nasyncio.run(main())\n# output:\n# 1\n# 2\n# 1\n# 3\n# 0\n# 1\n# [('Task-6', 'FINISHED'), ('Task-4', 'FINISHED'), ('Task-7', 'FINISHED'), ('Task-5', 'FINISHED'), ('Task-3', 'FINISHED'), ('Task-2', 'FINISHED')]\n# []\n# Task exception was never retrieved\n# future: <Task finished name='Task-6' coro=<foobar() done, defined at /data/kevin/workspace/zproject/me/ME/blog/2022-11-11-python3.11/main.py:5> exception=ZeroDivisionError('division by zero')>\n# Traceback (most recent call last):\n#   File \"/data/kevin/workspace/zproject/me/ME/blog/2022-11-11-python3.11/main.py\", line 9, in foobar\n#     i / _w  # \u5f53 _w = 0 \u65f6\u5f02\u5e38\n#     ~~^~~~\n# ZeroDivisionError: division by zero\n")),(0,p.kt)("p",null,"\u5176\u4e2d\u7684 except \u5e76\u4e0d\u80fd\u6355\u83b7\u5f02\u5e38\uff0c\u5f53\u9000\u51fa ",(0,p.kt)("inlineCode",{parentName:"p"},"main()")," \u524d\u91ca\u653e task \u65f6\u4f1a\u89e6\u53d1\u5f02\u5e38\uff0c\u5982\u679c\u53bb\u6389\u201c\u4e3b\u52a8\u5f15\u53d1\u5f02\u5e38\u201d\u90a3\u884c\uff0c\u5219\u4f1a\u5728\u8c03\u7528 ",(0,p.kt)("inlineCode",{parentName:"p"},"_task.result()")," \u65f6\u5c31\u89e6\u53d1\u5f02\u5e38\u3002\u2014\u2014 ",(0,p.kt)("inlineCode",{parentName:"p"},"wait")," \u5904\u7406\u5f02\u5e38\u7684\u65b9\u5f0f\u5c31\u6bd4\u8f83\u8e69\u811a\uff0c\u60f3\u6355\u83b7\u770b\u4e0d\u5230\uff0c\u4e0d\u5c0f\u5fc3\u53c8\u89e6\u96f7\u3002"),(0,p.kt)("p",null,"\u518d\u6765\u804a\u804a ",(0,p.kt)("inlineCode",{parentName:"p"},"gather()"),":"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"gather")," \u7684\u5165\u53c2 ",(0,p.kt)("inlineCode",{parentName:"p"},"return_exceptions")," \u542b\u4e49\u662f\u662f\u5426\u5c06\u5f02\u5e38\u548c\u666e\u901a result \u4e00\u6837\u5bf9\u5f85\uff0c\u5e38\u89c4\u8fd4\u56de\uff0c\u6709 2 \u4e2a\u53ef\u9009\u503c\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"False"),"(\u9ed8\u8ba4)\uff1a\u4e0d\u968f result \u4e00\u8d77\u8fd4\u56de\uff0c\u5373\uff1a\u4e00\u65e6\u67d0\u4e2a task \u5f15\u53d1\u5f02\u5e38\uff0c\u5219\u7b49\u5f85 ",(0,p.kt)("inlineCode",{parentName:"li"},"gather")," \u7684\u5916\u90e8\u4efb\u52a1\u7acb\u5373\u611f\u77e5\uff0c\u4f46\u5176\u4ed6 tasks \u662f\u4e0d\u4f1a\u88ab\u53d6\u6d88\u7684\uff0c\u4f1a\u7ee7\u7eed\u5728\u5e76\u53d1\u534f\u7a0b\u91cc\u8fd0\u884c\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"True"),"\uff1a\u5f02\u5e38\u968f result \u4e00\u8d77\u8fd4\u56de\u3002")),(0,p.kt)("p",null,"\u4e0b\u9762\u4ee3\u7801\u6f14\u793a True \u65f6\u60c5\u51b5:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"async def foobar(i):\n    _w = random.randint(0, 5)\n    await asyncio.sleep(_w)\n    i / _w  # \u5f53 _w = 0 \u65f6\u5f02\u5e38\n    return i + i\n\nasync def main():\n    tasks = [asyncio.create_task(foobar(_i)) for _i in range(3)]\n    futus = [asyncio.ensure_future(foobar(_i + 10)) for _i in range(3)]\n    _results = await asyncio.gather(*tasks, *futus, return_exceptions=True)\n    print(_results)\n\nasyncio.run(main())\n# output:\n# [ZeroDivisionError('division by zero'), 2, 4, 20, 22, 24]\n")),(0,p.kt)("p",null,"\u5982\u679c False\uff0c\u5219\u4f1a\u76f4\u63a5\u5f15\u53d1\u5f02\u5e38\uff0c\u5c31\u9700\u8981 ",(0,p.kt)("inlineCode",{parentName:"p"},"try...except")," \u4e0a\u573a\u4e86\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"async def foobar(i):\n    _w = random.randint(0, 5)\n    await asyncio.sleep(_w)\n    i / _w  # \u5f53 _w = 0 \u65f6\u5f02\u5e38\n    return i + i\n\nasync def main():\n    tasks = [asyncio.create_task(foobar(_i)) for _i in range(3)]\n    futus = [asyncio.ensure_future(foobar(_i + 10)) for _i in range(3)]\n    try:\n        _results = await asyncio.gather(*tasks, *futus, return_exceptions=False)\n    except Exception as e:\n        print(e)\n    finally:\n        # print(_results)\n        pass\n\nasyncio.run(main())\n")),(0,p.kt)("p",null,"\u7b2c\u4e00\u4e2a\u629b\u5f02\u5e38\u7684 task \u4f1a\u8ba9 ",(0,p.kt)("inlineCode",{parentName:"p"},"gather()")," \u9000\u51fa\uff0c\u6b64\u65f6\u4e0d\u80fd ",(0,p.kt)("inlineCode",{parentName:"p"},"print(_results)"),"\uff0c\u56e0\u4e3a ",(0,p.kt)("inlineCode",{parentName:"p"},"_results")," \u662f\u6ca1\u6709\u5b9a\u4e49\u7684\u3002"),(0,p.kt)("p",null,"\u603b\u7ed3\u4e00\u4e0b\u5bf9\u4e8e task \u629b\u51fa\u7684\u5f02\u5e38\u5904\u7406\uff0c",(0,p.kt)("inlineCode",{parentName:"p"},"gather")," \u548c ",(0,p.kt)("inlineCode",{parentName:"p"},"wait")," \u7b56\u7565\u5f02\u540c\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u7684 ",(0,p.kt)("inlineCode",{parentName:"li"},"return_when")," \u63a7\u5236\u8fd4\u56de\u65f6\u673a\uff0c\u533a\u5206\u5f02\u5e38\uff1b\u629b\u5f02\u5e38\u7684 task \u89c6\u540c\u6b63\u5e38\u5b8c\u6210\u7684 task\uff0c\u653e\u5165 done \u5217\u8868\u4e2d\uff1b\u6240\u4ee5\u5916\u5c42\u4e0d\u6355\u83b7\u5f02\u5e38\uff0c\u4f46\u5bf9\u5f02\u5e38 task \u6267\u884c ",(0,p.kt)("inlineCode",{parentName:"li"},"task.result()")," \u5219\u5f15\u53d1\u5f02\u5e38\uff0c\u5982\u679c\u4e0d\u5904\u7406\u5f02\u5e38\u9500\u6bc1 task \u65f6\u4e5f\u4f1a\u5f15\u53d1\u770b\u4f3c\u83ab\u540d\u5176\u5999\u7684\u5f02\u5e38\u3002\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gather")," \u7684 ",(0,p.kt)("inlineCode",{parentName:"li"},"return_exceptions")," \u63a7\u5236\u8fd4\u56de\u65f6\u673a\u548c\u8fd4\u56de\u503c\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"True")," \u662f\u4e00\u8d77\u8fd4\u56de\uff0c\u5f02\u5e38\u653e\u5165\u8fd4\u56de\u503c\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"False")," \u662f\u5f02\u5e38\u7acb\u5373\u8fd4\u56de\uff0c\u5916\u5c42\u53ef\u4ee5\u6355\u83b7\u5230\u5f02\u5e38\uff0c\u4f46\u5176\u4ed6 task \u7684\u8fd4\u56de\u503c\u83b7\u53d6\u53d8\u5f97\u56f0\u96be\u3002")),(0,p.kt)("p",null,"\u5982\u4f55\u66f4\u52a0\u4f18\u96c5\u7684\u7edf\u7b79 \u201c\u8fd4\u56de\u65f6\u673a\u201d\u3001\u201c\u8fd4\u56de\u503c\u201d\u3001\u201c\u5f02\u5e38\u5904\u7406\u201d \u5904\u7406\u65b9\u5f0f \u2014\u2014 \u5c31\u662f python3.11 \u8bbe\u8ba1 ",(0,p.kt)("inlineCode",{parentName:"p"},"asyncio.TaskGroup")," \u7684\u521d\u8877\u3002"),(0,p.kt)("h4",{id:"class-asynciotaskgroup"},(0,p.kt)("inlineCode",{parentName:"h4"},"class asyncio.TaskGroup")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"TaskGroup")," \u662f\u4e2a class\uff0c\u76ee\u524d\u53ea\u516c\u5f00\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff1a",(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"create_task()")," - \u5c06\u534f\u7a0b\u51fd\u6570\u5c01\u88c5\u6210 task"),"\uff0c\u548c\u4e00\u4e2a ",(0,p.kt)("inlineCode",{parentName:"p"},"async with...as...")," \u7684\u7528\u6cd5 \u2014\u2014 \u7b80\u7ec3\u800c\u4e0d\u7b80\u5355\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"create_task(coro, *, name=None, context=None)\n")),(0,p.kt)("p",null,"\u6e90\u7801\u5b9e\u73b0\u4e5f\u4e0d\u590d\u6742"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# python_src/Lib/asyncio/taskgroups.py\nclass TaskGroup:\n    ...\n    def create_task(self, coro, *, name=None, context=None):\n        ...\n        if context is None:\n            task = self._loop.create_task(coro)\n        else:\n            task = self._loop.create_task(coro, context=context)\n        tasks._set_task_name(task, name)\n        task.add_done_callback(self._on_task_done)\n        self._tasks.add(task)\n        return task\n")),(0,p.kt)("p",null,"\u5b98\u65b9\u63a8\u8350 ",(0,p.kt)("inlineCode",{parentName:"p"},"async with...as...")," \u5178\u578b\u7528\u6cd5\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"async def main():\n    async with asyncio.TaskGroup() as tg:\n        tasks = [tg.create_task(foobar(_i)) for _i in range(3)]\n    print([_task.result() for _task in tasks])\n")),(0,p.kt)("p",null,"\u5148\u8bf4\u8bbe\u8ba1\u76ee\u6807\uff08\u5373\uff1a\u5f53\u524d\u7684\u5df2\u5b9e\u73b0\u7684\u529f\u80fd\uff09\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"async with...as...")," \u8bed\u53e5\u5c06\u7b49\u5f85\u7ec4\u4e2d\u6240\u6709 task \u5b8c\u6210\u624d\u9000\u51fa\uff0c\u9000\u51fa\u524d\u6267\u884c ",(0,p.kt)("inlineCode",{parentName:"li"},"tg.__aexit__()"),"\u3002"),(0,p.kt)("li",{parentName:"ul"},"tg \u6267\u884c\u671f\u95f4\uff0c\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528 ",(0,p.kt)("inlineCode",{parentName:"li"},"tg.create_task()")," \u6dfb\u52a0\u65b0\u4efb\u52a1\u5230\u7ec4\u4e2d\u3002tg \u5df2\u7ecf\u5168\u90e8\u5b8c\u6210\u4e4b\u540e\u4e0d\u80fd\u518d\u6dfb\u52a0\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u7ec4\u5185\u67d0\u4e2a task \u88ab\u53d6\u6d88\uff08\u629b\u51fa ",(0,p.kt)("inlineCode",{parentName:"li"},"asyncio.CancelledError")," \u5f02\u5e38\uff09\uff0c\u7ec4\u5185\u5176\u4ed6 task \u4e0d\u53d7\u5f71\u54cd\u3002\u2014\u2014 ",(0,p.kt)("strong",{parentName:"li"},"\u53ef\u4ee5\u5355\u72ec\u53d6\u6d88\u67d0\u4e2a task\uff0c\u4e0d\u6ce2\u53ca\u5176\u4ed6 task\u3002")),(0,p.kt)("li",{parentName:"ul"},"\u7ec4\u5185\u4efb\u4f55 task \u629b\u51fa\u975e ",(0,p.kt)("inlineCode",{parentName:"li"},"asyncio.CancelledError")," \u7684\u5f02\u5e38\uff0c\u7ec4\u5185\u5176\u4ed6\u4efb\u52a1\u5c06\u5168\u90e8\u88ab Cancell\u3002\u2014\u2014 ",(0,p.kt)("strong",{parentName:"li"},"\u5176\u4ed6\u5f02\u5e38\u65f6\uff0c\u7ec4\u5185 task \u540c\u8fdb\u9000\u3002")),(0,p.kt)("li",{parentName:"ul"},"\u6240\u6709\u5728 ",(0,p.kt)("inlineCode",{parentName:"li"},"async with...as...")," \u4e2d\u629b\u51fa\u7684\u5f02\u5e38\u90fd\u662f\u5f02\u5e38\u7ec4\uff0c\u6240\u4ee5\u5efa\u8bae ",(0,p.kt)("inlineCode",{parentName:"li"},"try...except*")," \u6355\u83b7\u3002")),(0,p.kt)("p",null,"\u770b\u4e0b\u9762\u4ee3\u7801"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'import asyncio\nimport random\n\nasync def foobar(i):\n    _w = random.randint(1, 5) # \u968f\u673a sleep _w \u79d2\n    print(i, _w)\n    await asyncio.sleep(_w)\n    if _w == 1:\n        raise ValueError(i)\n    if _w == 2:\n        raise asyncio.CancelledError(i)\n    if _w == 3:\n        raise asyncio.TimeoutError(i)\n    return i + i\n\nasync def main():\n    try:\n        async with asyncio.TaskGroup() as tg:\n            tasks = [tg.create_task(foobar(_i), name=_i) for _i in range(3)]\n        print([_task.result() for _task in tasks])\n    except ValueError as e:\n        print(f"Catch ValueError: {e=}")\n    except Exception as e:\n        print(f"Catch Exception: {e=}")\n    except asyncio.CancelledError as ce: # `CancelledError` \u6bd4\u8f83\u7279\u6b8a\uff0c\u7ee7\u627f\u81ea `BaseException`\n        print(f"Catch CancelledError: {ce=}")\n    finally:\n        print([(_task.get_name(), _task._state) for _task in tasks])  # \u6253\u5370\u6240\u6709 task \u6700\u7ec8\u7684\u7ed3\u675f\u72b6\u6001\n\nasyncio.run(main())\n')),(0,p.kt)("p",null,"\u591a\u6b21\u8fd0\u884c ",(0,p.kt)("inlineCode",{parentName:"p"},"$ time python main.py"),"\uff0c\u5f97\u5230\u51e0\u79cd\u4e0d\u540c\u7684\u7ed3\u679c\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u6240\u6709 task \u65e0\u5f02\u5e38"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"3 \u4e2a task \u90fd\u6b63\u5e38\u7ed3\u675f\uff0c\u6267\u884c\u4e86 ",(0,p.kt)("inlineCode",{parentName:"li"},"async with...as...")," \u5916\u7684 print \u8bed\u53e5\u3002",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},"0 4\n1 4\n2 5\n[0, 2, 4]\n[('0', 'FINISHED'), ('1', 'FINISHED'), ('2', 'FINISHED')]\npython main.py  0.10s user 0.01s system 2% cpu 5.105 total\n"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53d6\u6d88\u5f02\u5e38\uff1a\u4e0d\u6ce2\u53ca\u5176\u4ed6"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"0 \u53f7 task \u629b\u51fa ",(0,p.kt)("inlineCode",{parentName:"li"},"CancelledError"),"\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6 task \u8fd0\u884c\u5230 ",(0,p.kt)("inlineCode",{parentName:"li"},"FINISHED"),"\uff0c\u603b\u5171\u8017\u65f6 4s\u3002",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},"0 2\n1 4\n2 4\nCatch CancelledError: ce=CancelledError(0)\n[('0', 'CANCELLED'), ('1', 'FINISHED'), ('2', 'FINISHED')]\npython main.py  0.07s user 0.02s system 2% cpu 4.092 total\n"))),(0,p.kt)("li",{parentName:"ul"},"0\u30011 \u53f7 task \uff08\u51e0\u4e4e\uff09\u540c\u65f6\u629b ",(0,p.kt)("inlineCode",{parentName:"li"},"CancelledError")," \u5f02\u5e38\uff0c\u4e5f\u4e0d\u6ce2\u53ca\u5269\u4e0b\u7684 1 \u4e2a task\uff0c4s \u624d\u9000\u51fa\u3002",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},"0 2\n1 2\n2 4\nCatch CancelledError: ce=CancelledError(0)\n[('0', 'CANCELLED'), ('1', 'CANCELLED'), ('2', 'FINISHED')]\npython main.py  0.10s user 0.00s system 2% cpu 4.104 total\n"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u666e\u901a\u5f02\u5e38\uff1a\u540c\u8fdb\u9000\u3001\u5f02\u5e38\u7ec4"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"2 \u53f7 task 1s \u65f6\u629b\u51fa\u666e\u901a\u5f02\u5e38\uff0c\u7acb\u5373\u9000\u51fa\uff0c\u5176\u4ed6 task \u4ee5 ",(0,p.kt)("inlineCode",{parentName:"li"},"CANCELLED")," \u7ed3\u675f\uff0c\u5373\u4f7f\u5176\u4ed6 task \u5728 3s \u540e\u4e5f\u4f1a\u629b\u5f02\u5e38\uff08\u6ca1\u673a\u4f1a\u4e86\uff09\uff0c\u6355\u83b7\u5230\u7684\u662f\u5f02\u5e38\u7ec4\u3002",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},"0 3\n1 3\n2 1\nCatch Exception: e=ExceptionGroup('unhandled errors in a TaskGroup', [ValueError(2)])\n[('0', 'CANCELLED'), ('1', 'CANCELLED'), ('2', 'FINISHED')]\npython main.py  0.09s user 0.01s system 8% cpu 1.099 total\n"))),(0,p.kt)("li",{parentName:"ul"},"1\u30012 \u53f7 task \uff08\u51e0\u4e4e\uff09\u540c\u65f6\u629b ",(0,p.kt)("inlineCode",{parentName:"li"},"TimeoutError")," \u5f02\u5e38\uff0c\u4f1a\u81ea\u52a8\u7ec4\u5408\u6210\u5f02\u5e38\u7ec4\uff0c\u800c\u4e0d\u4f1a\u5176\u4e2d 1 \u4e2a cancell \u6389\u53e6\u4e00\u4e2a\u3002\u2014\u2014 ",(0,p.kt)("strong",{parentName:"li"},"\u4e34\u8fd1\u7684\u666e\u901a\u5f02\u5e38\u81ea\u52a8\u7ec4\u5408"),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},"0 5\n1 3\n2 3\nCatch Exception: e=ExceptionGroup('unhandled errors in a TaskGroup', [TimeoutError(1), TimeoutError(2)])\n[('0', 'CANCELLED'), ('1', 'FINISHED'), ('2', 'FINISHED')]\npython main.py  0.08s user 0.00s system 2% cpu 3.088 total\n"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53d6\u6d88 + \u666e\u901a\u5f02\u5e38\uff1a\u4e0d\u6ce2\u53ca\u3001\u5176\u4f59\u540c\u8fdb\u9000\u3001\u5f02\u5e38\u7ec4"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"2 \u4e2a ",(0,p.kt)("inlineCode",{parentName:"li"},"CancelledError")," + 1 \u4e2a\u666e\u901a\u5f02\u5e38\uff1a\u666e\u901a\u5f02\u5e38\u5408\u6210\u5f02\u5e38\u7ec4\uff0c4s \u624d\u9000\u51fa\u3002",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},"0 3\n1 2\n2 2\nCatch Exception: e=ExceptionGroup('unhandled errors in a TaskGroup', [TimeoutError(0)])\n[('0', 'FINISHED'), ('1', 'CANCELLED'), ('2', 'CANCELLED')]\npython main.py  0.09s user 0.01s system 3% cpu 3.105 total\n")))))),(0,p.kt)("h4",{id:"taskgroupgatherwait-\u5bf9\u6bd4"},(0,p.kt)("inlineCode",{parentName:"h4"},"TaskGroup"),"\u3001",(0,p.kt)("inlineCode",{parentName:"h4"},"gather"),"\u3001",(0,p.kt)("inlineCode",{parentName:"h4"},"wait")," \u5bf9\u6bd4"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:null},"\u7279\u6027"),(0,p.kt)("th",{parentName:"tr",align:null},(0,p.kt)("inlineCode",{parentName:"th"},"results = await gather()")),(0,p.kt)("th",{parentName:"tr",align:null},(0,p.kt)("inlineCode",{parentName:"th"},"(done, pending) = await wait()")),(0,p.kt)("th",{parentName:"tr",align:null},(0,p.kt)("inlineCode",{parentName:"th"},"async with TaskGroup() as tg")))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u65f6\u673a"),(0,p.kt)("td",{parentName:"tr",align:null},(0,p.kt)("inlineCode",{parentName:"td"},"return_exceptions")," \u63a7\u5236\uff1a",(0,p.kt)("inlineCode",{parentName:"td"},"True"),"\u5168\u5b8c\u6210\u5171\u540c\u8fd4\u56de\uff1b",(0,p.kt)("inlineCode",{parentName:"td"},"False"),"\u9996\u5f02\u5e38\u7acb\u5373\u8fd4\u56de\u3002"),(0,p.kt)("td",{parentName:"tr",align:null},(0,p.kt)("inlineCode",{parentName:"td"},"return_when")," \u63a7\u5236\uff1a\u5168\u5b8c\u6210\u5171\u540c\u3001\u9996\u5f02\u5e38\u7acb\u5373\u3001\u9996\u5b8c\u6210\u7acb\u5373\u3002"),(0,p.kt)("td",{parentName:"tr",align:null},"\u975e\u53d6\u6d88\u5f02\u5e38\u7acb\u5373\u8fd4\u56de\uff1b\u5176\u4ed6\u5168\u5b8c\u6210\u5171\u540c\u8fd4\u56de\uff1b")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u503c"),(0,p.kt)("td",{parentName:"tr",align:null},(0,p.kt)("inlineCode",{parentName:"td"},"Future.results()")),(0,p.kt)("td",{parentName:"tr",align:null},(0,p.kt)("inlineCode",{parentName:"td"},"(done, pending)")),(0,p.kt)("td",{parentName:"tr",align:null})),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"\u5916\u5c42\u6355\u83b7\u5f02\u5e38"),(0,p.kt)("td",{parentName:"tr",align:null},"\u5168\u5b8c\u6210\u5171\u540c\u8fd4\u56de\u65f6\u904d\u5386\u67e5\u627e\u8fd4\u56de\u503c\u627e\u51fa\u5f02\u5e38\uff1b\u9996\u5f02\u5e38\u7acb\u5373\u8fd4\u56de\u65f6\u53ef\u6355\u83b7\u3002"),(0,p.kt)("td",{parentName:"tr",align:null},"\u5f02\u5e38\u5904\u7406\u6709\u5751\uff0c\u9047\u5230\u5f02\u5e38 ",(0,p.kt)("inlineCode",{parentName:"td"},"result()")," \u6216\u9500\u6bc1\u65f6\u624d\u4f1a\u9047\u5230\u3002"),(0,p.kt)("td",{parentName:"tr",align:null},"\u90fd\u9700\u8981\u5916\u5c42\u6355\u83b7")))),(0,p.kt)("p",null,"\u6240\u4ee5:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"3 \u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u5b9e\u73b0\u201c",(0,p.kt)("strong",{parentName:"li"},"\u5168\u5b8c\u6210\u5171\u540c\u8fd4\u56de\u3001\u9996\u5f02\u5e38\u7acb\u5373\u8fd4\u56de"),"\u201d\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"gather")," \u548c ",(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u9700\u8981\u7528\u5165\u53c2\u63a7\u5236\uff0c",(0,p.kt)("inlineCode",{parentName:"li"},"TaskGroup")," \u6ca1\u6cd5\u63a7\u5236\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gather")," \u4fbf\u4e8e\u83b7\u53d6 result\uff1b",(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u4fbf\u4e8e\u6309\u72b6\u6001\u5206\u7ec4\uff1b",(0,p.kt)("inlineCode",{parentName:"li"},"TaskGroup")," \u4fbf\u4e8e\u7ed1\u5b9a task \u547d\u8fd0\u5171\u540c\u4f53\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u5982\u9700\u8981\u5b9e\u73b0\u53d6\u6d88 1 \u4e2a task \u800c\u4e0d\u5f71\u54cd\u7ec4\u4e2d\u5176\u4ed6 task \u7684\u9700\u6c42\u65f6\uff1a",(0,p.kt)("inlineCode",{parentName:"li"},"gather")," \u548c ",(0,p.kt)("inlineCode",{parentName:"li"},"wait")," \u53d7\u9650\u6216\u65e0\u6cd5\u5b9e\u73b0\uff0c ",(0,p.kt)("inlineCode",{parentName:"li"},"TaskGroup")," \u5219\u5c31\u662f\u4e3a\u6b64\u800c\u751f\u7684\u3002")),(0,p.kt)("h3",{id:"typingtypevartuple-pep-646"},"typing.TypeVarTuple: ",(0,p.kt)("a",{parentName:"h3",href:"https://peps.python.org/pep-0646/"},"PEP 646")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"Python3.5 \u5f15\u5165\u4e86 ",(0,p.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0484/"},"PEP 484")," \u89c4\u8303\u7684\u7c7b\u578b\u6807\u6ce8\uff08typing hints\uff09\uff0c\u5b9a\u4e49\u4e86\u7528\u4e8e\u7c7b\u578b\u68c0\u67e5\u800c ",(0,p.kt)("inlineCode",{parentName:"li"},"Any"),", ",(0,p.kt)("inlineCode",{parentName:"li"},"Union"),", ",(0,p.kt)("inlineCode",{parentName:"li"},"Tuple"),", ",(0,p.kt)("inlineCode",{parentName:"li"},"Callable"),"\u7b49\uff0c\u7528\u4e8e\u6cdb\u578b\u7684 ",(0,p.kt)("inlineCode",{parentName:"li"},"TypeVar"),",",(0,p.kt)("inlineCode",{parentName:"li"},"Optional"),"\u548c ",(0,p.kt)("inlineCode",{parentName:"li"},"Generic"),"\u7b49\uff1b"),(0,p.kt)("li",{parentName:"ul"},"python3.10 \u65b0\u589e\u4e86\u8bed\u6cd5 ",(0,p.kt)("inlineCode",{parentName:"li"},"T = int | str")),(0,p.kt)("li",{parentName:"ul"},"Python3.11 \u5f15\u5165\u4e86 ",(0,p.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0646/"},"PEP 646")," \u89c4\u8303\u7684 ",(0,p.kt)("inlineCode",{parentName:"li"},"TypeVarTuple"),"\uff0c\u7528\u4e8e\u53ef\u53d8\u53c2\u6570\u7684\u6cdb\u578b\u3002")),(0,p.kt)("h4",{id:"\u590d\u4e60-typevar"},"\u590d\u4e60 TypeVar"),(0,p.kt)("p",null,"\u7c7b\u578b\u6807\u6ce8\u662f\u5bf9\u53c2\u6570\u6587\u6863\u7684\u66ff\u4ee3\uff0c\u53ef\u4ee5\u4f7f\u7528 mypy \u5de5\u5177\u68c0\u67e5\uff0c\u4f46\u76ee\u524d\u4e0d\u4f1a\u5f71\u54cd\u8fd0\u884c\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'def foobar(name: str):\n    print(f"hello: {name}")\n\nfoobar(100)\n')),(0,p.kt)("p",null,"\u7c7b\u578b\u6807\u6ce8\u4e3a str\uff0c\u4f46\u9001\u5165\u7684 int \u53d8\u91cf\uff0cmypy \u53ef\u4ee5\u63d0\u793a\u9519\u8bef\uff0c\u4f46\u4ecd\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sh"},'$ python main.py\nhello: 100\n$ mypy main.py\nmain.py:13: error: Argument 1 to "foobar" has incompatible type "int"; expected "str"  [arg-type]\n')),(0,p.kt)("p",null,"\u5f3a\u70c8\u5efa\u8bae\u4f60\u5c06 mypy \u914d\u7f6e\u5230 VSCode \u4e2d\uff0c\u5f00\u542f\u81ea\u52a8\u68c0\u67e5\uff1aVSCode -- Settings -- Python>Linting: Mypy Enabled -- \u52fe\u9009\u3002"),(0,p.kt)("p",null,"\u8fd9\u6837\u4f60\u4f1a\u5728 100 \u4e0b\u9762\u770b\u5230\u7ea2\u8272\u7684\u6ce2\u6d6a\u53f7\u3002"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Union")," \u7b49\u7c7b\u578b\u53ef\u4ee5\u505a\u9650\u5b9a\u67d0\u4e9b\u7c7b\u578b\u7684\u5165\u53c2\u6807\u6ce8\uff0c\u6709\u70b9\u6cdb\u578b\u7684\u90a3\u4e2a\u610f\u601d\u4e86\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'from typing import Union\n\ndef foobar(name: Union[str, int]):\n    print(f"hello: {name}")\n\nfoobar("Tom")\nfoobar(100)\n# output:\n# hello: Tom\n# hello: 100\n')),(0,p.kt)("p",null,"python3.10 \u5f15\u5165\u4e86 ",(0,p.kt)("inlineCode",{parentName:"p"},"T = int | str")," \u540e\uff0c\u53c8\u591a\u4e86\u4e00\u4e2a\u7b49\u6548\u7684\u9009\u62e9\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'U = int | str\n\ndef foobar(name: U):\n    print(f"hello: {name}")\n\nfoobar("Tom")\nfoobar(100)\n# output:\n# hello: Tom\n# hello: 100\n')),(0,p.kt)("p",null,"\u4f7f\u7528 TypeVar \u53ef\u5b9e\u73b0\u66f4\u901a\u7528\u7684\u6cdb\u578b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'from typing import TypeVar\n\nT = TypeVar("T", int, str)\n\ndef foobar(name: T):\n    print(f"hello: {name}")\n\nfoobar("Tom")\nfoobar(100)\n# output:\n# hello: Tom\n# hello: 100\n')),(0,p.kt)("p",null,"TypeVar \u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u591a\u4f60\u6307\u5b9a\u7684\u7c7b\u578b\uff0c\u751a\u81f3\u53ef\u4ee5\u7528 ",(0,p.kt)("inlineCode",{parentName:"p"},'TypeVar("T")')," \u8868\u793a\u4e0d\u9650\u5b9a\u7c7b\u578b\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'from typing import TypeVar, List, Dict\n\nT = TypeVar("T", int, str, List, Dict)\n\ndef foobar(name: T):\n    print(f"hello: {name}")\n\nfoobar("Tom")\nfoobar(100)\nfoobar(True)\nfoobar(["Tom", 100, True])\nfoobar({"Tom": 100, "Jerry": 99})\n# output:\n# hello: Tom\n# hello: 100\n# hello: True\n# hello: [\'Tom\', 100, True]\n# hello: {\'Tom\': 100, \'Jerry\': 99}\n')),(0,p.kt)("p",null,"TypeVar \u521b\u5efa\u4e00\u4e2a\u6cdb\u578b\u7c7b\u7684\u7b7e\u540d\u4e3a\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# python_src/Libtyping.py\nclass TypeVar(_Final, _Immutable, _BoundVarianceMixin, _PickleUsingNameMixin,_root=True):\n    def __init__(self, name, *constraints, bound=None, covariant=False, contravariant=False):\n        ...\n")),(0,p.kt)("p",null,"\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f name\uff0c\u540e\u9762\u8ddf\u7c7b\u578b\u7684\u9650\u5236\uff0c\u6ca1\u6709\u5219\u4e0d\u9650\u5236\uff0c\u6240\u4ee5\u5e38\u89c1\u7528\u6cd5\u662f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"T = TypeVar('T')  # Can be anything\nA = TypeVar('A', str, bytes)  # Must be str or bytes\n")),(0,p.kt)("p",null,"\u6240\u4ee5\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\uff1a"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Union[int, str]")," \u4e0e ",(0,p.kt)("inlineCode",{parentName:"p"},"U = int | str")," \u4e0e ",(0,p.kt)("inlineCode",{parentName:"p"},"T = TypeVar('T', int, str)")," \u4e09\u8005\u662f\u7b49\u6548\u7684\u3002"),(0,p.kt)("p",null,"\u5e76\u4e14\u4f3c\u4e4e ",(0,p.kt)("inlineCode",{parentName:"p"},"T = TypeVar('T') ")," \u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u6cdb\u578b\u4e86\uff0c\u5176\u5b9e\u4e0d\u7136\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'from typing import TypeVar\n\nU = int | str\n\n\ndef max_1(a: U, b: U) -> U:\n    return max(a, b)\n\n\nT = TypeVar("T", int, str)\n\n\ndef max_2(a: T, b: T) -> T:\n    return max(a, b)\n\n\nmax_1("foo", 1) # mypy \u6ca1\u6709\u7ed9\u51fa\u9519\u8bef\u63d0\u793a\nmax_2("foo", 1) # mypy \u53ef\u4ee5\u8bc6\u522b\u6807\u6ce8\uff0c\u5e76\u7ed9\u51fa\u9519\u8bef\u63d0\u793a\n# Value of type variable "T" of "max_2" cannot be "object"  [type-var]mypy(error)\n')),(0,p.kt)("p",null,"TypeVar \u6bd4 Union \u66f4\u6df1\u5c42\u800c\u8868\u8fbe\u4e86\u6cdb\u578b\u800c\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u540c\u7406\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'def max_3(items: list[U]) -> U:\n    return max(*items)\n\ndef max_4(items: list[T]) -> T:\n    return max(*items)\n\nmax_3([1, 2, "3"]) # mypy \u6ca1\u6709\u9519\u8bef\u63d0\u793a\nmax_4([1, 2, "3"]) # mypy \u7ed9\u51fa\u9519\u8bef\u63d0\u793a\n')),(0,p.kt)("h4",{id:"\u590d\u4e60-generic"},"\u590d\u4e60 Generic"),(0,p.kt)("p",null,"Generic \u662f\u4e2a\u62bd\u8c61\u57fa\u7c7b\uff0c\u4e13\u7528\u4e8e\u521b\u5efa\u6cdb\u578b\u7c7b\u578b\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'from typing import TypeVar, Generic, List\n\nKT = TypeVar("KT", int, str)\nVT = TypeVar("VT", int, str)\n\n\nclass MyDict(Generic[KT, VT]):\n    def __init__(self, keys: List[KT], values: List[VT]) -> None:\n        super().__init__()\n        self.data = {}\n        for _k, _v in zip(keys, values):\n            self.data[_k] = _v\n\n    def __getitem__(self, key: KT) -> VT:\n        return self.data[key]\n\n\ndef lookup(mapping: MyDict[KT, VT], key: KT, default: VT) -> VT:\n    try:\n        return mapping[key]\n    except KeyError:\n        return default\n\n\n_m1 = MyDict([0, 1, 2], ["A", "B", "C"])\n_m2 = MyDict(["A", "B", "C"], [0, 1, 2])\nprint(lookup(_m1, 0, "A"))\nprint(lookup(_m2, "B", 100))\n# output:\n# A\n# 1\n')),(0,p.kt)("h4",{id:"\u5b66\u4e60-typevartuple"},"\u5b66\u4e60 TypeVarTuple"),(0,p.kt)("p",null,"\u53ef\u53d8\u53c2\u6570\u6cdb\u578b\u4e00\u76f4\u662f python \u793e\u533a\u7684\u591a\u5e74\u6765\u5f3a\u70c8\u8981\u6c42\uff0c\u6bd4\u5982 numpy \u4e2d\u6362\u7b97\u56fe\u50cf\u77e9\u9635\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"def to_gray(videos: Array): ...\n")),(0,p.kt)("p",null,"\u4ece\u7b7e\u540d\u4e0a\u4f60\u65e0\u6cd5\u770b\u51fa videos \u662f ",(0,p.kt)("inlineCode",{parentName:"p"},"batch \xd7 time \xd7 height \xd7 width \xd7 channels")," \u8fd8\u662f ",(0,p.kt)("inlineCode",{parentName:"p"},"time \xd7 batch \xd7 channels \xd7 height \xd7 width"),"\uff0c\u9001\u9519\u4e86\u53c2\u6570\u53ef\u80fd\u5f88\u96be\u5bdf\u89c9\uff0c\u7528\u6587\u6863\u7ea6\u675f\u662f\u5386\u53f2\u4e0a\u80fd\u7528\u7684\u3001\u4f46\u4e0d\u597d\u7528\u7684\u624b\u6bb5\u3002"),(0,p.kt)("p",null,"python \u793e\u533a\u63d0\u8bae\u7528\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"def to_gray(videos: Array[Time, Batch, Height, Width, Channels]): ...\n")),(0,p.kt)("p",null,"\u5373\u4f7f\u5141\u8bb8\u4e86\u8fd9\u79cd\u8bed\u6cd5\uff0c\u51fd\u6570\u7684\u5f00\u53d1\u8005\u5c06\u4f1a\u611f\u89c9\u4e0d\u7075\u6d3b\uff0c\u6ca1\u6709\u6cdb\u578b\u7684\u52a0\u6301\u540e\u7eed\u5347\u7ea7\u5c31\u5f88\u96be\u641e\u517c\u5bb9\u6027\u3002"),(0,p.kt)("p",null,"python3.11 \u63d0\u4f9b\u4e86\u65b0\u7684\u89e3\u51b3\u65b9\u6848\uff1a",(0,p.kt)("inlineCode",{parentName:"p"},"TypeVarTuple")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from typing import TypeVar, TypeVarTuple, NewType\n\nDType = TypeVar('DType')\nShape = TypeVarTuple('Shape')\n\nclass Array(Generic[DType, *Shape]):\n\n    def __abs__(self) -> Array[DType, *Shape]: ...\n\n    def __add__(self, other: Array[DType, *Shape]) -> Array[DType, *Shape]: ...\n\n\nBatch = NewType('Batch', int)\nHeight = NewType('Height', int)\nWidth = NewType('Width', int)\nchannels = NewType('channels', int)\n\ndef to_gray(videos: Array[float, Batch, Height, Width, channels]):...\n")),(0,p.kt)("p",null,"\u7528\u6237\u8c03\u7528\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from typing import Literal as L\n\nx: Array[float, L[5], L[480], L[640], L[3]] = Array()\nto_gray(x)\n")),(0,p.kt)("h3",{id:"typingself-pep-673"},"typing.Self: ",(0,p.kt)("a",{parentName:"h3",href:"https://peps.python.org/pep-0673/"},"PEP 673")),(0,p.kt)("p",null,"python3.11 \u4e4b\u524d\uff0c\u6ca1\u6709\u624b\u6bb5\u5bf9\u8fd4\u56de\u5b9e\u4f8b\u81ea\u5df1\u7684\u65b9\u6cd5\u505a\u8fd4\u56de\u503c\u6807\u6ce8\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"class Shape:\n    def set_scale(self, scale: float) -> Shape: # \u8bed\u6cd5\u9519\u8bef\n        self._scale = scale\n        return self\n\n    def area(self):\n        pass\n")),(0,p.kt)("p",null,"\u8fd9\u53ef\u4ee5\u8bf4\u662f\u6807\u6ce8\u6280\u672f\u7684\u4e00\u4e2a\u7f3a\u9677\uff0c3.11 \u586b\u8865\u8fd9\u4e2a\u9057\u61be\uff0cpython \u9996\u5148\u60f3\u5230\u7684\u4e5f\u662f\u8ba9\u4e0a\u9762\u7684\u8bed\u6cd5\u80fd\u591f\u4e0d\u9519\u8bef\uff0c\u4f46\u662f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"class Circle(Shape):\n    def __init__(self, radius: int):\n        self._r = radius\n        self._scale = 1\n\n    def area(self):\n        return 3.14 * self._r * self._r * self._scale\n\n\nc = Circle(3)\nc = c.set_scale(0.5) # c \u5c06\u7528 Shape \u505a\u7c7b\u578b\u5224\u65ad\uff0c\u800c\u4e0d\u662f\u5e0c\u671b\u7684 Circle\nprint(c.area())\n")),(0,p.kt)("p",null,"\u53ef\u89c1\u8fd4\u56de Shape \u4f1a\u8ba9\u7ee7\u627f\u7c7b\u5f88\u5c34\u5c2c\uff0c\u867d\u7136\u4e0d\u5f71\u54cd\u6267\u884c\uff0c\u4f46\u7c7b\u578b\u6807\u6ce8\u548c\u7c7b\u578b\u68c0\u67e5\u8fd8\u662f\u4e0d\u6b63\u786e\u3002\u6240\u4ee5\uff1a\u65b0\u589e\u4e86 Self\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from typing import Self\n\nclass Shape:\n    def set_scale(self, scale: float) -> Self:\n        self._scale = scale\n        return self\n\n    def area(self):\n        pass\n\nclass Circle(Shape):\n    def __init__(self, radius: int):\n        self._r = radius\n        self._scale = 1\n\n    def area(self):\n        return 3.14 * self._r * self._r * self._scale\n\ndef cut_circle(circle: Circle):\n    pass\n\nc = Circle(3)\nc = c.set_scale(0.5) # \u51fd\u6570\u7b7e\u540d\u4e3a\uff1a(method) set_scale: (scale: float) -> Circle\ncut_circle(c)\n")),(0,p.kt)("p",null,"\u8fd9\u6837\u4e0d\u4f46 checker \u6b63\u786e\u68c0\u67e5\u51fa\u4e86\u51fd\u6570\u7b7e\u540d\u4e2d\u8fd4\u56de\u503c\u800c\u6807\u6ce8\uff0c",(0,p.kt)("inlineCode",{parentName:"p"},"cut_circle(c)")," \u4e2d\u4e5f\u4e0d\u4f1a\u62a5\u5165\u53c2\u9519\u8bef\u4e86\u3002"),(0,p.kt)("p",null,"Self \u4e5f\u53ef\u4ee5\u505a\u65b9\u6cd5\u5bf9\u7684\u53c2\u6570\uff0c\u8fd8\u6709\u66f4\u591a\u7528\u6cd5\u53c2\u8003 PEP673\u3002"),(0,p.kt)("h3",{id:"typingliteralstring-pep-675"},"typing.LiteralString: ",(0,p.kt)("a",{parentName:"h3",href:"https://peps.python.org/pep-0675/"},"PEP 675")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"Python3.8 \u5f15\u5165\u4e86 ",(0,p.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0586/"},"PEP 586")," \u89c4\u8303\u7684 ",(0,p.kt)("inlineCode",{parentName:"li"},"typing.Literal"),"\uff08\u5b57\u9762\u91cf\uff09"),(0,p.kt)("li",{parentName:"ul"},"Python3.11 \u5f15\u5165 ",(0,p.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0675/"},"PEP 675")," \u89c4\u8303\u7684 LiteralString")),(0,p.kt)("p",null,"\u548c\u524d\u9762\u4e00\u6837\uff0c\u4f7f\u7528 ",(0,p.kt)("inlineCode",{parentName:"p"},"typing")," \u4e2d\u7684\u7c7b\u578b\u6807\u6ce8\u6700\u7ec8\u90fd\u662f\u4e3a\u4e86\u5c3d\u65e9\u3001\u53ca\u65f6\u7684\u627e\u5230 ",(0,p.kt)("inlineCode",{parentName:"p"},"TypeError"),"\uff0c\u65e0\u8bba\u662f\u7528 mypy \u8fd9\u79cd checker\uff0c\u6216\u8005\u5728\u8fd0\u884c\u65f6\u627e\u5230\u3002"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"typing.Literal")," \u662f\u5e72\u5565\u7684\uff1f\u2014\u2014 \u5b83\u662f\u89e3\u51b3\u8fd9\u79cd\u9700\u6c42\u7684\uff1a\u7528\u6237\u53ea\u60f3\u5141\u8bb8\u67d0\u4e9b\u503c\uff08\u6bd4\u5982 3\uff09\u4f5c\u4e3a\u53d8\u91cf/\u5165\u53c2\uff0c\u4e0d\u5e0c\u671b\u5176\u4ed6\u503c\uff08\u6bd4\u5982 1\u30012\u30014...\uff09\uff0c\u8fd9\u79cd\u9700\u6c42\u7528 typing \u4e2d\u5176\u4ed6\u7684\u7c7b\u578b\u6807\u6ce8\u5b9e\u73b0\u4e0d\u4e86\uff0c\u6240\u4ee5\u8bbe\u8ba1\u4e86 Literal\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'from typing import Literal\n\ndef accepts_only_four(x: Literal[4]) -> None:\n    pass\n\naccepts_only_four(4)  # OK\naccepts_only_four(19)  # mypy \u62a5\u9519\uff1a\n# Argument 1 to "accepts_only_four" has incompatible type "Literal[19]"; expected "Literal[4]"  [arg-type]mypy(error)\n')),(0,p.kt)("p",null,"\u6216\u8005\u5b57\u7b26\u5b57\u9762\u91cf\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'MODE = Literal["r", "rb", "w", "wb"]\n\ndef open_helper(file: str, mode: MODE) -> str:\n    pass\n\nopen_helper("/some/path", "r")  # Passes type check\nopen_helper("/other/path", "typo")  # mypy \u62a5\u9519\uff1a\n# Argument 2 to "open_helper" has incompatible type "Literal[\'typo\']"; expected "Literal[\'r\', \'rb\', \'w\', \'wb\']"  [arg-type]mypy(error)\n')),(0,p.kt)("p",null,"\u6240\u8c13\u5b57\u9762\u91cf\u7c7b\u578b\u68c0\u67e5\uff0c\u5c31\u662f\u8981\u5b57\u9762\u4e0a\u4e00\u6a21\u4e00\u6837\u5339\u914d\u624d\u7b97\u68c0\u67e5\u901a\u8fc7\u3002"),(0,p.kt)("p",null,"\u5047\u5982\u6709\u8fd9\u6837\u4e00\u4e2a\u64cd\u4f5c SQL \u6570\u636e\u5e93\u800c\u51fd\u6570\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'def query_user(conn: Connection, user_id: str) -> User:\n    query = f"SELECT * FROM data WHERE user_id = {user_id}"\n    conn.execute(query)\n    ...  # Transform data to a User object and return it\n')),(0,p.kt)("p",null,"\u7528\u6237\u6267\u884c\u4e0b\u9762\u662f\u6b63\u5e38\u64cd\u4f5c\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'query_user(conn, "user123")  # OK.\n')),(0,p.kt)("p",null,"\u4f46\u5982\u679c\u7528\u6237\u6267\u884c\u4e0b\u9762\u64cd\u4f5c\u5c06\u4f1a\u5220\u9664\u6574\u4e2a table\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'query_user(conn, "user123; DROP TABLE data;")\n')),(0,p.kt)("p",null,"\u5982\u4f55\u9632\u6b62\u8fd9\u6837\u7684\u201cSQL \u6ce8\u5165\u201d\u653b\u51fb\uff1f\u2014\u2014 LiteralString\uff1a\u4ec5\u63a5\u53d7\u7531\u5df2\u77e5\u5b57\u9762\u91cf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from typing import LiteralString\n\ndef query_user(sql: LiteralString) -> ...\n    ...\n")),(0,p.kt)("p",null,"\u5177\u4f53\u662f\u5982\u4f55\u68c0\u67e5\u9519\u8bef\u7684\u2026\u2026\u4f3c\u4e4e\u8fd8\u6ca1\u5b9e\u73b0\u597d\uff0cmypy \u4e5f\u5c1a\u4e0d\u652f\u6301\u3002"),(0,p.kt)("h3",{id:"typingdataclass_transform-pep-681"},"typing.dataclass_transform: ",(0,p.kt)("a",{parentName:"h3",href:"https://peps.python.org/pep-0681/"},"PEP 681")),(0,p.kt)("p",null,"python3.7 \u5f15\u5165\u4e86 ",(0,p.kt)("a",{parentName:"p",href:"https://peps.python.org/pep-0681/"},"PEP 557")," \u89c4\u8303\u7684 dataclasses\uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u5bf9\u8c61\uff08\u5982\uff1a\u6570\u636e\u5e93\u76f8\u5173\u8054\u7684 data \u5bf9\u8c61\uff09\uff0c\u8fd9\u7c7b\u5bf9\u8c61\u4e00\u822c\u5177\u6709\u7684\u7279\u5f81\u662f\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u540c\u7c7b\uff0c\u5e76\u53ef\u6bd4\u8f83"),(0,p.kt)("li",{parentName:"ul"},"\u503c\u5f88\u91cd\u8981\uff0c\u4e0d\u9700\u8981\u592a\u591a\u65b9\u6cd5"),(0,p.kt)("li",{parentName:"ul"},"\u4e00\u65e6\u8d4b\u503c\uff0c\u901a\u5e38\u4e0d\u53ef\u53d8")),(0,p.kt)("h4",{id:"\u590d\u4e60-dataclassesdataclass-\u88c5\u9970\u5668"},"\u590d\u4e60 ",(0,p.kt)("inlineCode",{parentName:"h4"},"@dataclasses.dataclass")," \u88c5\u9970\u5668"),(0,p.kt)("p",null,"dataclasses \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u88c5\u9970\u5668 ",(0,p.kt)("inlineCode",{parentName:"p"},"@dataclass")," \u6765\u65b9\u4fbf\u6211\u4eec\u5b9e\u73b0\u8fd9\u6837\u7684\u5bf9\u8c61\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from dataclasses import dataclass\nfrom typing import List\n\n\n@dataclass()\nclass AAU:\n    name: str\n    type: str\n    SLAVE_NUM: int\n    CHN_NUM: int\n    BAND0: dict\n    opt_port: List\n\n\naau = AAU(\n    name=\"9642A\",\n    type=\"S26\",\n    SLAVE_NUM=2,\n    CHN_NUM=32,\n    BAND0={\"start_freq\": 2515000, \"stop_freq\": 2675000},\n    opt_port=[21, 19],\n)\nprint(aau)\n# output:\n# AAU(name='9642A', type='S26', SLAVE_NUM=2, CHN_NUM=32, BAND0={'start_freq': 2515000, 'stop_freq': 2675000}, opt_port=[21, 19])\n")),(0,p.kt)("p",null,"\u88c5\u9970\u5668 ",(0,p.kt)("inlineCode",{parentName:"p"},"@dataclass()")," \u4e3a\u4f60\u81ea\u52a8\u751f\u6210 ",(0,p.kt)("inlineCode",{parentName:"p"},"__init__()"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"__eq__()"),"\u3001",(0,p.kt)("inlineCode",{parentName:"p"},"__lt__()")," \u7b49\u65b9\u6cd5\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0d\u8ba9\u5b83\u81ea\u52a8\u751f\u6210\uff0c\u81ea\u5df1\u6765\u624b\u52a8\u5b9e\u73b0\u3002"),(0,p.kt)("h4",{id:"\u5b66\u4e60-typingdataclass_transform-\u88c5\u9970\u5668"},"\u5b66\u4e60 ",(0,p.kt)("inlineCode",{parentName:"h4"},"@typing.dataclass_transform")," \u88c5\u9970\u5668"),(0,p.kt)("p",null,"\u5f85\u8865\u5145"),(0,p.kt)("h3",{id:"typingtypeddict-pep-655"},"typing.TypedDict: ",(0,p.kt)("a",{parentName:"h3",href:"https://peps.python.org/pep-0655/"},"PEP 655")),(0,p.kt)("p",null,"python3.8 \u5f15\u5165\u4e86 ",(0,p.kt)("inlineCode",{parentName:"p"},"typing.TypedDict"),"\uff0c\u8ba9\u5b57\u5178\u7c7b\u578b\u4f7f\u7528\u66f4\u65b9\u4fbf\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'from typing import TypedDict\n\nclass Point2D(TypedDict):\n    x: int\n    y: int\n    label: str\n\na: Point2D = {"x": 1, "y": 2, "label": "good"}  # OK\nb: Point2D = {"z": 3, "label": "bad"}  # Fails type check\nc: Point2D = {"label": "bad"}  # Fails type check\n\nassert Point2D(x=1, y=2, label="first") == dict(x=1, y=2, label="first")\n')),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u3001\u8d4b\u503c\u90fd\u66f4\u65b9\u4fbf\u4e86"),(0,p.kt)("li",{parentName:"ol"},"\u589e\u52a0\u4e0d\u6ee1\u8db3\u9884\u671f\u7684 ",(0,p.kt)("inlineCode",{parentName:"li"},"key: value")," \u4f1a\u62a5\u9519\uff08\u5982\uff1ab \u4e2d\u589e\u52a0\u4e86 z\uff09"),(0,p.kt)("li",{parentName:"ol"},"\u6ca1\u6709\u5b9a\u4e49\u9700\u8981\u7684 ",(0,p.kt)("inlineCode",{parentName:"li"},"key: value")," \u4e5f\u4f1a\u62a5\u9519\uff08\u5982\uff1ac \u4e2d\u7f3a\u5c11 x\u3001y\uff09")),(0,p.kt)("p",null,"\u540e 2 \u70b9\u6709\u70b9\u6781\u7aef\uff0c\u4e0d\u80fd\u591a\u4e5f\u4e0d\u80fd\u7f3a\uff0c\u800c PEP 655 \u901a\u8fc7\u5f15\u5165 ",(0,p.kt)("inlineCode",{parentName:"p"},"Required[]")," \u548c ",(0,p.kt)("inlineCode",{parentName:"p"},"NotRequired[]")," \u53ef\u4ee5\u8ba9 TypedDict \u91cc\u9762\u7684\u952e\u7684\u5b9a\u4e49\u660e\u786e\u662f\u5426\u5f3a\u4f9d\u8d56:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from typing import TypedDict, Required, NotRequired\n\nclass Point2D(TypedDict):\n    x: Required[int]\n    y: NotRequired[int]\n    label: str\n")),(0,p.kt)("p",null,"\u8fd9\u6837\u5728\u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u68c0\u67e5\u5668\u5c31\u80fd\u591f\u6b63\u786e\u533a\u5206\u4e86\u3002\u8fd9\u79cd\u529f\u80fd\u5728 typescript \u548c go \u4e2d\u6700\u521d\u5c31\u8bbe\u8ba1\u4e86\uff0cpython \u53d1\u5c55\u4e86 20 \u5e74\u4e86\u624d\u52a0\u5165\u3002"),(0,p.kt)("h3",{id:"getmembers_static"},"getmembers_static"),(0,p.kt)("p",null,"3.11 \u4e4b\u524d\uff1a"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"getattr(obj, attrname)")," \u548c ",(0,p.kt)("inlineCode",{parentName:"p"},"hasattr(obj, attrname)")," \u90fd\u53ef\u80fd\u4f1a\u5728\u83b7\u53d6\u6216\u8005\u5224\u65ad\u5c5e\u6027\u662f\u5426\u5b58\u5728\u65f6\u89e6\u53d1\u4ee3\u7801\u6267\u884c\uff0c\u5c24\u5176\u662f\u5199\u5728\u83b7\u53d6\u76ee\u6807\u6240\u5728 py \u6587\u4ef6\u6839\u7ea7\u522b\u4e0b\u7684\u4ee3\u7801\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u53ca\u5176 import \u7684\u6587\u4ef6\u3002"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"inspect.getmembers(obj)")," \u83b7\u53d6 obj \u6240\u6709\u7684\u5c5e\u6027\uff0c\u540c\u6837\u4e5f\u4f1a\u89e6\u53d1\u4ee3\u7801\u7684\u6267\u884c\u3002"),(0,p.kt)("p",null,"\u4e3a\u4e86\u66f4\u7701\u8d44\u6e90\u7684\u83b7\u53d6\u5c5e\u6027\u548c\u65b9\u6cd5\uff0cpython3.2 \u5f15\u5165\u4e86 ",(0,p.kt)("inlineCode",{parentName:"p"},"inspect.getattr_static(obj, attrname)"),"\uff0c\u53ef\u4ee5\u9759\u6001\u7684\u5185\u7701\uff0c\u83b7\u53d6\u5c5e\u6027\u800c\u4e0d\u89e6\u53d1\u52a8\u6001\u67e5\u627e\u529f\u80fd\uff0c\u4f46\u53ea\u662f\u83b7\u53d6\u6307\u5b9a name \u7684 attr\u3002\u83b7\u53d6\u6240\u6709 members \u6ca1\u6709\u9759\u6001\u7684\u65b9\u6cd5\u3002"),(0,p.kt)("p",null,"3.11\uff0c\u65f6\u9694 9 \u5e74\uff0c\u7ec8\u4e8e\u52a0\u5165\u4e86 ",(0,p.kt)("inlineCode",{parentName:"p"},"inspect.getmembers_static(obj)")," \u2014\u2014 \u7ec8\u4e8e\u6709\u4e86\u9759\u6001\u5185\u7701\u83b7\u53d6\u6240\u6709\u6210\u5458\u7684\u51fd\u6570\u4e86\u3002"),(0,p.kt)("h2",{id:"\u7f3a\u9677\u4e0e\u9677\u9631"},"\u7f3a\u9677\u4e0e\u9677\u9631"),(0,p.kt)("p",null,"\u6700\u540e\uff0c\u6cfc\u4e00\u70b9\u51b7\u6c34\u3002"),(0,p.kt)("p",null,"\u4e0d\u8981\u5347\u7ea7\u8fd9\u4e48\u5feb\uff0c\u81f3\u5c11\u7b49\u5230\u51e0\u4e2a\u6708\u540e\u7684 3.11.1 \u6216 3.11.2\uff0c\u4e00\u822c\u8fd9 2 \u4e2a\u90fd\u662f\u6bd4\u8f83\u91cd\u8981\u6216\u91cd\u5927\u7684 bugfix\uff0c\u8ffd\u6c42\u7a33\u5b9a\u6027\u7684\u8bdd\uff0c\u4e0d\u5982\u518d\u7b49\u51e0\u4e2a\u6708\u3002"),(0,p.kt)("p",null,"\u5176\u6b21\uff0cdistutils \u66fe\u7ecf\u662f python \u6253\u5305\u7684\u5b98\u65b9\u5fc5\u9009\uff0c\u5199\u4e2a setup.py \u5c31\u80fd\u6253\u5305\u4e86\uff0c\u4f46 distutils \u5373\u5c06\u4e0e 3.12 \u5e9f\u5f03\uff0c3.11 \u4e2d\u4e5f\u5f00\u59cb\u63d0\u793a\u9884\u5e9f\u5f03\uff0c\u5e76\u63d0\u793a\u7528 setuptools \u66ff\u4ee3\u3002setuptools \u4f7f\u7528 setup.cfg \u4f5c\u4e3a\u6253\u5305\u914d\u7f6e\u6587\u4ef6\uff0c\u4e3a\u4e86\u517c\u5bb9\uff0cpython \u5b98\u65b9\u63a8\u8350\u7528 setuptools \u5165\u53e3\u8fd0\u884c setup.py \u2014\u2014 \u4e00\u4e2a\u8e69\u811a\u7684\u65b9\u6848\u3002"),(0,p.kt)("p",null,"setup.cfg \u5f53\u524d\u7b80\u76f4\u662f\u4e2a\u5783\u573e\u6876\uff0c\u5927\u91cf\u4e0e\u6253\u5305\u65e0\u5173\u7684\u5185\u5bb9\u5199\u5165\u5176\u4e2d\uff0c\u800c\u4e0d\u662f\u66f4\u5e94\u8be5\u53bb\u7684 project.toml\uff0c\u4f7f\u5f97 setup \u8fd9\u4e2a\u5355\u8bcd\u5931\u53bb\u4e86\u5e94\u6709\u7684\u610f\u4e49\u3002\u8fd9\u53ef\u80fd\u662f\u5b98\u65b9\u6b64\u6b21\u52a0\u5165 tomllib \u7684\u7528\u610f\u5427\uff1a\u8d76\u7d27\u5427 project.toml \u7ed9\u6211\u7528\u8d77\u6765\u3002"))}m.isMDXComponent=!0}}]);