"use strict";(self.webpackChunkdocusaurus_site=self.webpackChunkdocusaurus_site||[]).push([[96704],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(n),c=o,y=u["".concat(p,".").concat(c)]||u[c]||k[c]||l;return n?r.createElement(y,a(a({ref:t},m),{},{components:n})):r.createElement(y,a({ref:t},m))}));function c(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},53651:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return k}});var r=n(87462),o=n(63366),l=(n(67294),n(3905)),a=["components"],i={title:"Python3.12 \u4ecb\u7ecd",description:"python3.12",authors:"wKevin",tags:["python","python3.12","GIL","f-str","cpython_monitor"]},p=void 0,s={permalink:"/blog/2023/11/21/python3.12",source:"@site/blog/2023-11-21-python3.12/index.md",title:"Python3.12 \u4ecb\u7ecd",description:"python3.12",date:"2023-11-21T00:00:00.000Z",formattedDate:"November 21, 2023",tags:[{label:"python",permalink:"/blog/tags/python"},{label:"python3.12",permalink:"/blog/tags/python-3-12"},{label:"GIL",permalink:"/blog/tags/gil"},{label:"f-str",permalink:"/blog/tags/f-str"},{label:"cpython_monitor",permalink:"/blog/tags/cpython-monitor"}],truncated:!0,authors:[{name:"wKevin",title:"\u4e00\u9897\u5411\u4e0a\u7684\u6c34\u6ef4",url:"http://weibo.com/wkevin27",imageURL:"/img/avastar/angry.bird-l.jpg",key:"wKevin"}],frontMatter:{title:"Python3.12 \u4ecb\u7ecd",description:"python3.12",authors:"wKevin",tags:["python","python3.12","GIL","f-str","cpython_monitor"]},nextItem:{title:"\u914d\u7f6e matplotlib \u4e2d\u6587\u5b57\u4f53",permalink:"/blog/2023/07/03/matplotlib.zh.font"}},m={authorsImageUrls:[void 0]},k=[{value:"\u73af\u5883\u642d\u5efa",id:"\u73af\u5883\u642d\u5efa",level:2},{value:"PEP 684: \u89e3\u6790\u5668\u7ea7 GIL",id:"pep-684-\u89e3\u6790\u5668\u7ea7-gil",level:2},{value:"PEP 701\uff1af-\u5b57\u7b26\u4e32\u8bed\u6cd5\u6539\u8fdb",id:"pep-701f-\u5b57\u7b26\u4e32\u8bed\u6cd5\u6539\u8fdb",level:2},{value:"PEP 669: CPython \u76d1\u63a7\u5668",id:"pep-669-cpython-\u76d1\u63a7\u5668",level:2},{value:"PEP 695: \u6cdb\u578b\u65b0\u8bed\u6cd5",id:"pep-695-\u6cdb\u578b\u65b0\u8bed\u6cd5",level:2},{value:"typing \u6a21\u5757\u4fee\u6539",id:"typing-\u6a21\u5757\u4fee\u6539",level:2},{value:"PEP 698: \u65b0\u589e <code>@override()</code>",id:"pep-698-\u65b0\u589e-override",level:3},{value:"PEP 692: \u4f18\u5316 <code>class TypedDict(dict)</code>",id:"pep-692-\u4f18\u5316-class-typeddictdict",level:3},{value:"\u79fb\u9664",id:"\u79fb\u9664",level:2},{value:"distuils \u5305",id:"distuils-\u5305",level:3},{value:"imp \u6a21\u5757",id:"imp-\u6a21\u5757",level:3}],u={toc:k};function c(e){var t=e.components,n=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u6458\u8981\uff1a")),(0,l.kt)("p",null,"python3.12 \u4e0e 2023.10 \u53d1\u5e03\u6b63\u5f0f\u7248\uff1a3.12.0\uff0c\u5f00\u59cb\u8fdb\u5165\u751f\u4ea7\u9636\u6bb5\u7684\u751f\u547d\u5468\u671f\u3002"),(0,l.kt)("p",null,"\u672c\u6587\u4ece jupyter \u5bfc\u51fa\uff0c\u6bcf\u6bb5\u4ee3\u7801\u540e\u9762\u8ddf\u968f\u7684\u662f\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u3002"),(0,l.kt)("h2",{id:"\u73af\u5883\u642d\u5efa"},"\u73af\u5883\u642d\u5efa"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5b89\u88c5 python\uff08\u4e0b\u9762\u65b9\u6cd5 2 \u9009 1\uff09",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"pyenv & venv",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"$ pyenv install 3.12.0\n$ pyenv versions\n$ pyenv shell 3.12.0\n$ python -V\n$ python -m venv venv312\n$ source venv312/bin/activate\n"))),(0,l.kt)("li",{parentName:"ol"},"docker",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# \u66ff\u6362\u5176\u4e2d\u7684 `<my_code>` \u4e3a\u81ea\u5df1\u4ee3\u7801\u6240\u5728\u4f4d\u7f6e\n$ docker run -it -d --name py312 -p 8888:8888 -v <my_code>:/src python:3.12\n$ docker exec -it py312 bash\n"))))),(0,l.kt)("li",{parentName:"ol"},"\u5b89\u88c5 jupyter\uff08\u4e0b\u9762\u65b9\u6cd5 2 \u9009 1\uff09 \u2014\u2014 \u53ef\u9009",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"jupyter lab/notebook on browser",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pip install jupyter")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pip install nb_mypy black isort jupyterlab-code-formatter jupyter-black")," \u2014\u2014 \u53ef\u9009"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"jupyter lab --allow-root --no-browser --ip=0.0.0.0")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"jupyter notebook --allow-root --no-browser --ip=0.0.0.0")),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u5e26\u6709 token \u7684\u94fe\u63a5\u6253\u5f00\u6d4f\u89c8\u5668"),(0,l.kt)("li",{parentName:"ul"},"\u914d\u7f6e\uff1aSettings -- Settings Editor",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"jupyterlab-code-formatter -- \uff08\u62c9\u5230\u6700\u4e0b\u9762\uff09-- Auto format config -- \u52fe\u9009"))))),(0,l.kt)("li",{parentName:"ol"},"jupyter notebook on VSCode",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5b89\u88c5 VSCode Jupyter \u6269\u5c55"),(0,l.kt)("li",{parentName:"ul"},"F1 - select interpreter - \u9009\u62e9 python venv \u2014\u2014 \u8fd9\u6837\u5728 jupyter \u4e2d kernel \u624d\u80fd\u88ab\u770b\u5230"),(0,l.kt)("li",{parentName:"ul"},"\u6253\u5f00 ipynb \u6587\u4ef6\uff0c\u53f3\u4e0a\u89d2\u9009\u62e9\u89e3\u91ca\u5668")))))),(0,l.kt)("h2",{id:"pep-684-\u89e3\u6790\u5668\u7ea7-gil"},"PEP 684: \u89e3\u6790\u5668\u7ea7 GIL"),(0,l.kt)("p",null,"\u4ece 1997 \u5e74\u7684 python v1.5 \u5f00\u59cb\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u591a\u4e2a\u89e3\u91ca\u5668\uff0c\u4f46\u8fd9\u4e9b\u89e3\u91ca\u5668\u5171\u7528\u4e00\u4e2a GIL\uff08\u5168\u5c40\u8fdb\u7a0b\u9501\uff09\uff0c\u6240\u4ee5\u867d\u7136\u591a\u7ebf\u7a0b\uff0c\u4f46\u5176\u5b9e\u662f\u5355\u7ebf\u7a0b\u3002"),(0,l.kt)("p",null,"26 \u5e74\u4e4b\u540e\uff0cpython3.12 \u7ec8\u4e8e\u4ece\u8fdb\u7a0b\u7ea7 GIL \u6539\u4e3a\u89e3\u91ca\u5668\u7ea7 GIL\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://peps.python.org/pep-0684/"},"PEP 684 \u2013 A Per-Interpreter GIL")),(0,l.kt)("p",null,"\u6bcf\u4e2a\u89e3\u91ca\u5668\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u72ec\u7acb\u7684 GIL\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u89e3\u91ca\u5668\u4e0a\u7684\u591a\u7ebf\u7a0b\u4ecd\u7136\u5171\u7528\u4e00\u4e2a GIL"),(0,l.kt)("li",{parentName:"ul"},"\u591a\u4e2a\u89e3\u91ca\u5668\u4e0a\u7684\u591a\u7ebf\u7a0b\u4f7f\u7528\u5404\u81ea\u7684 GIL")),(0,l.kt)("p",null,"API \u9884\u8ba1\u5c06\u5728 3.13 \u4e2d\u6dfb\u52a0: ",(0,l.kt)("a",{parentName:"p",href:"https://peps.python.org/pep-0554/"},"PEP 554 \u2013 Multiple Interpreters in the Stdlib")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65b0\u589e ",(0,l.kt)("inlineCode",{parentName:"li"},"interpreters")," \u6a21\u5757"),(0,l.kt)("li",{parentName:"ul"},"\u65b0\u589e ",(0,l.kt)("inlineCode",{parentName:"li"},"class conCurent.futures.InterpreterPoolExecutor"))),(0,l.kt)("p",null,"Demo:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import interpreters\n\ninterp = interpreters.create()\n\ndef run():\n    interp.exec('print(\"during\")')\n\nt = threading.Thread(target=run)\n\nt.start()\nt.join()\n")),(0,l.kt)("h2",{id:"pep-701f-\u5b57\u7b26\u4e32\u8bed\u6cd5\u6539\u8fdb"},"PEP 701\uff1af-\u5b57\u7b26\u4e32\u8bed\u6cd5\u6539\u8fdb"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"python3.6 \u9996\u6b21\u5f15\u5165\u4e86 f \u5b57\u7b26\u4e32\u8bed\u6cd5\uff1a",(0,l.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0498/"},"PEP 498 \u2013 Literal String Interpolation")),(0,l.kt)("li",{parentName:"ul"},"python3.7 \u4e2d\u505a\u4e86\u4e00\u4e9b\u4f18\u5316\uff1a",(0,l.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0536/"},"PEP 536 \u2013 Final Grammar for Literal String Interpolation")),(0,l.kt)("li",{parentName:"ul"},"python3.12 \u4e2d\u505a\u4e2a\u66f4\u591a\u7684\u4f18\u5316\uff0c\u4e3b\u8981\u662f\u653e\u5f03\u4e86\u4e00\u4e9b\u5199\u6cd5\u9650\u5236\uff1a",(0,l.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0701/"},"PEP 701 \u2013 Syntactic formalization of f-strings"))),(0,l.kt)("p",null,"\u5141\u8bb8\u5728\u8868\u8fbe\u5f0f\u90e8\u5206\u4e2d\u4f7f\u7528\u5f15\u53f7\u5b57\u7b26\uff08\u5f15\u53f7\u91cd\u7528\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"facebook = {'Tom': 60, 'Jerry': 90, \"Bloto\": 30}\n\nprint(f'Tom score: { facebook['Tom'] }')\nprint(f\"Jerry score: { facebook[\"Jerry\"] }\")\nprint(f\"Bloto score: { facebook['Bloto'] }\")\n\n# print(f'Tom score: { facebook[\\'Tom\\'] }') # python3.12 \u4e4b\u524d \u7981\u6b62 f \u4e2d\u8f6c\u4e49\u5b57\u7b26\n")),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"Tom score: 60\nJerry score: 90\nBloto score: 30\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'songs = ["Take me back to Eden", "Alkaline", "Ascensionism"]\nprint(f"This is the playlist: {", ".join(songs)}")\n\n# py3.12 \u4e4b\u524d\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a\nprint(f"This is the playlist: {\', \'.join(songs)}") # \u4e0d\u540c\u7684\u5f15\u53f7\nprint(f"""This is the playlist: {\', \'.join(songs)}""") # \u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u5f15\u53f7\u505a\u5d4c\u5957\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"This is the playlist: Take me back to Eden, Alkaline, Ascensionism\nThis is the playlist: Take me back to Eden, Alkaline, Ascensionism\nThis is the playlist: Take me back to Eden, Alkaline, Ascensionism\n"))),(0,l.kt)("p",null,"\u5141\u8bb8\u5199 \\ \u5b57\u7b26"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Unicode \u5b57\u7b26\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"\\N{...}"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://unicodeplus.com/"},"\u8fd9\u91cc")," \u6709\u5404\u79cd\u8bed\u8a00\u5bf9\u5e94\u7684\u7f16\u7801"))),(0,l.kt)("li",{parentName:"ul"},"\u8f6c\u4e49\u5b57\u7b26\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"\\r"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"\\n"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"\\b"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"\\t"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"\\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'print(f"This is the playlist: {" \\N{BLACK HEART SUIT} ".join(songs)}")\nprint(f"\\N{snowman} \\N{Grinning Face} \\N{Face With Tears Of Joy} \\U0001F602 ")\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"This is the playlist: Take me back to Eden \u2665 Alkaline \u2665 Ascensionism\n\u2603 \ud83d\ude00 \ud83d\ude02 \ud83d\ude02\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'print(f"This is the playlist: {"\\n".join(songs)}")\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"This is the playlist: Take me back to Eden\nAlkaline\nAscensionism\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from time import sleep\n\nstarts = ['***', '++', '-']\n\nprint(f\"{\"\\r\".join(starts)}\")\n")),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"-+*\n"))),(0,l.kt)("p",null,"\u5d4c\u5957\u65b9\u5f0f\u66f4\u52a0\u76f4\u89c2\uff0c\u5d4c\u5957\u5c42\u7ea7\u6269\u5c55\u5230\u65e0\u9650"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# python3.6 \u5f00\u59cb\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\u5d4c\u5957\uff0c4\u5c42\u5d4c\u5957\u4e5f\u662f\u6700\u591a\u7684\u4e86\nprint(f\"\"\"{f'''{f'{f\"{1+1}\"}'}'''}\"\"\")\n")),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"2\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# python3.12 \u5f00\u59cb\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\u4efb\u610f\u591a\u5c42\u7684\u5d4c\u5957\u4e86\nprint(f"{f"{f"{f"{f"{f"{1+1}"}"}"}"}"}")\n\nprint(f"{f"{f"{f"{f"{f"{1+1}"+"a"}"+"b"}"+"c"}"+"d"}"+"e"}")\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"2\n2abcde\n"))),(0,l.kt)("p",null,"\u53ef\u4ee5\u5b9a\u4e49\u8de8\u8d8a\u591a\u884c\u7684 f-\u5b57\u7b26\u4e32\u5e76\u6dfb\u52a0\u5185\u8054\u6ce8\u91ca"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(f\"Flake8 error code: {\", \".join([\n    'F401', # module imported but unused\n    'F402', # import module from line N shadowed by loop variable\n    'F403', # \u2018from module import *\u2019 used; unable to detect undefined names\n    'F404', # future import(s) name after other statements\n])}\")\n\n")),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"Flake8 error code: F401, F402, F403, F404\n"))),(0,l.kt)("p",null,"\u53ef\u4ee5\u5728\u8868\u8fbe\u5f0f\u7ec4\u4ef6\u4e2d\u5305\u542b\u4efb\u4f55\u6709\u6548\u7684 Python \u8868\u8fbe\u5f0f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'f"{print("abc")}"\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"abc\n"))),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"'None'\n"))),(0,l.kt)("p",null,"\u4e00\u4e9b\u6280\u5de7"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# \u4ece python3.6 \u5f00\u59cb\uff0c\u5c31\u652f\u6301 :\n\nf"some words {1+2:.3f}"\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"'some words 3.000'\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# \u4ece python3.8 \u5f00\u59cb\uff0cf\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 = \u8fd0\u7b97\u7b26\u6765\u8c03\u8bd5\u8868\u8fbe\u5f0f\n\nf"{1+1=}"\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"'1+1=2'\n"))),(0,l.kt)("h2",{id:"pep-669-cpython-\u76d1\u63a7\u5668"},"PEP 669: CPython \u76d1\u63a7\u5668"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://peps.python.org/pep-0669/"},"PEP 669 \u2013 Low Impact Monitoring for CPython")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"sys.monitoring")," \u662f sys \u6a21\u5757\u4e2d\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u800c\u4e0d\u662f\u72ec\u7acb\u7684\u6a21\u5757\uff0c\u56e0\u6b64:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u80fd\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"import sys.monitoring")," \u6216 ",(0,l.kt)("inlineCode",{parentName:"li"},"from sys import monitoring")),(0,l.kt)("li",{parentName:"ul"},"\u800c\u662f\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"import sys")," \u540e\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring"))),(0,l.kt)("p",null,"monitoring \u6709 3 \u4e2a\u7ec4\u4ef6\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Tool identifiers"),(0,l.kt)("li",{parentName:"ol"},"Events"),(0,l.kt)("li",{parentName:"ol"},"Callbacks")),(0,l.kt)("p",null,"4 \u4e2a Tool, 3 \u4e2a\u51fd\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import sys\n\n# 4 \u4e2a tool\n# sys.monitoring.DEBUGGER_ID = 0\n# sys.monitoring.COVERAGE_ID = 1\n# sys.monitoring.PROFILER_ID = 2\n# sys.monitoring.OPTIMIZER_ID = 5\n\n# 3 \u4e2a\u51fd\u6570\nsys.monitoring.free_tool_id(sys.monitoring.DEBUGGER_ID)\nsys.monitoring.use_tool_id(sys.monitoring.DEBUGGER_ID, "foobar")\nsys.monitoring.get_tool(sys.monitoring.DEBUGGER_ID)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},'<cell>10: error: Module has no attribute "monitoring"  [attr-defined]\nERROR:nb-mypy:<cell>10: error: Module has no attribute "monitoring"  [attr-defined]\n<cell>11: error: Module has no attribute "monitoring"  [attr-defined]\nERROR:nb-mypy:<cell>11: error: Module has no attribute "monitoring"  [attr-defined]\n<cell>12: error: Module has no attribute "monitoring"  [attr-defined]\nERROR:nb-mypy:<cell>12: error: Module has no attribute "monitoring"  [attr-defined]\n'))),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"'foobar'\n"))),(0,l.kt)("p",null,"19 \u4e2a Event\uff0c6 \u4e2a\u51fd\u6570"),(0,l.kt)("p",null,"Event \u5206\u4e3a 3 \u7ec4\uff1a"),(0,l.kt)("p",null,"Local events\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.PY_START")," \u2014\u2014 Python \u51fd\u6570\u7684\u5f00\u59cb"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.PY_RESUME")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.PY_RETURN")," \u2014\u2014 \u4ece Python \u51fd\u6570\u8fd4\u56de"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.PY_YIELD")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.CALL")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.LINE")," \u2014\u2014 \u5373\u5c06\u6267\u884c\u7684\u6307\u4ee4\u7684\u884c\u53f7\u4e0e\u524d\u4e00\u6761\u6307\u4ee4\u4e0d\u540c"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.INSTRUCTION")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.JUMP")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.BRANCH")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.STOP_ITERATION"))),(0,l.kt)("p",null,"Ancillary events"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.C_RAISE")," \u2014\u2014 \u975e python \u51fd\u6570\u629b\u5f02\u5e38"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.C_RETURN"))),(0,l.kt)("p",null,"Other events"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.PY_THROW")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.PY_UNWIND")," \u2014\u2014 \u5728\u5f02\u5e38\u5c55\u5f00\u671f\u95f4\u9000\u51fa Python \u51fd\u6570"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.RAISE")," \u2014\u2014 python \u51fd\u6570\u629b\u5f02\u5e38"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.RERAISE")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.EXCEPTION_HANDLED")," \u2014\u2014 \u6355\u83b7\u5f02\u5e38"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.events.NO_EVENTS")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.DISABLE"))),(0,l.kt)("p",null,"6 \u4e2a\u51fd\u6570\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.set_events(tool_id: int, event_set: int, /) \u2192 None"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u6216\u64cd\u4f5c\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"RAISE | PY_START")))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.get_events(tool_id: int, /) \u2192 int")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.get_local_events(tool_id: int, code: CodeType, /) \u2192 int")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.set_local_events(tool_id: int, code: CodeType, event_set: int, /) \u2192 None")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.restart_events() \u2192 None")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"sys.monitoring.register_callback(tool_id: int, event: int, func: Callable | None, /) \u2192 Callable | None")," \u2014\u2014 \u6ce8\u518c\u56de\u8c03\u51fd\u6570\uff0c\u4e0d\u540c\u7684 Event \u56de\u8c03\u51fd\u6570\u7b7e\u540d\u4e0d\u540c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import sys\nfrom types import CodeType\n\nM = sys.monitoring\nTD = M.DEBUGGER_ID # 0\nTC = M.COVERAGE_ID # 1\nTP = M.PROFILER_ID # 2\nTO = M.OPTIMIZER_ID # 5\nE = sys.monitoring.events\n\nclass CounterWithDisable:\n    def __init__(self):\n        self.disable = False\n        self.count = 0\n\n    def __call__(self, *args):\n        if self.count  == 100:\n            print(args)\n        self.count += 1\n        if self.disable:\n            return sys.monitoring.DISABLE\n\n\ndef foobar():\n    pass\n\ntool = TC\n\ncounter = CounterWithDisable()\nprint(counter.count)\nsys.monitoring.register_callback(tool, E.LINE, counter) # \u6ce8\u518c\u56de\u8c03\n\nif sys.monitoring.get_tool(tool) is not None: # Tool \u4e0d\u80fd\u91cd\u590d\u542f\u7528\n    sys.monitoring.free_tool_id(tool)\nsys.monitoring.use_tool_id(tool, "ToolP") # \u542f\u7528 Tool\n\nsys.monitoring.set_events(tool, E.LINE | E.PY_RETURN)\nprint(f"events: {sys.monitoring.get_events(tool)}")\nprint(counter.count)\nfoobar()\nprint(counter.count)\n\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"0\n/home/me/.pyenv/versions/3.12.0/lib/python3.12/contextlib.py\nevents: 36\n412\n594\n"))),(0,l.kt)("h2",{id:"pep-695-\u6cdb\u578b\u65b0\u8bed\u6cd5"},"PEP 695: \u6cdb\u578b\u65b0\u8bed\u6cd5"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://peps.python.org/pep-0695/"},"PEP 695 \u2013 Type Parameter Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# \u5728\u6b64PEP\u4e4b\u524d\u5b9a\u4e49\u6cdb\u578b\u7c7b\u5982\u4e0b\u6240\u793a\n\nfrom typing import Generic, TypeAlias, TypeVar\n\n_T_co = TypeVar("_T_co", covariant=True, bound=str)\n\n\nclass ClassA(Generic[_T_co]):\n    def method1(self) -> _T_co:\n        ...\n\n\n_T = TypeVar("_T")\n\n\ndef func(a: _T, b: _T) -> _T:\n    ...\n\n\nListOrSet: TypeAlias = list[_T] | set[_T]\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},'<cell>10: error: Incompatible return value type (got "str", expected "_T_co")  [return-value]\nERROR:nb-mypy:<cell>10: error: Incompatible return value type (got "str", expected "_T_co")  [return-value]\n<cell>16: error: Missing return statement  [empty-body]\nERROR:nb-mypy:<cell>16: error: Missing return statement  [empty-body]\n'))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u4f7f\u7528\u65b0\u7684\u8bed\u6cd5\uff0c\u5b83\u770b\u8d77\u6765\u5982\u4e0b\u6240\u793a\n\n\nclass ClassA[T: str]:\n    def method1(self) -> T:\n        ...\n\n\ndef func[T](a: T, b: T) -> T:\n    ...\n\n\ntype ListOrSet[T] = list[T] | set[T]\n")),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"<cell>4: error: PEP 695 generics are not yet supported  [valid-type]\nERROR:nb-mypy:<cell>4: error: PEP 695 generics are not yet supported  [valid-type]\n<cell>5: error: Missing return statement  [empty-body]\nERROR:nb-mypy:<cell>5: error: Missing return statement  [empty-body]\n<cell>5: error: A function returning TypeVar should receive at least one argument containing the same TypeVar  [type-var]\nERROR:nb-mypy:<cell>5: error: A function returning TypeVar should receive at least one argument containing the same TypeVar  [type-var]\n<cell>9: error: Missing return statement  [empty-body]\nERROR:nb-mypy:<cell>9: error: Missing return statement  [empty-body]\n<cell>9: error: PEP 695 generics are not yet supported  [valid-type]\nERROR:nb-mypy:<cell>9: error: PEP 695 generics are not yet supported  [valid-type]\n<cell>13: error: PEP 695 type aliases are not yet supported  [valid-type]\nERROR:nb-mypy:<cell>13: error: PEP 695 type aliases are not yet supported  [valid-type]\n"))),(0,l.kt)("h2",{id:"typing-\u6a21\u5757\u4fee\u6539"},"typing \u6a21\u5757\u4fee\u6539"),(0,l.kt)("h3",{id:"pep-698-\u65b0\u589e-override"},"PEP 698: \u65b0\u589e ",(0,l.kt)("inlineCode",{parentName:"h3"},"@override()")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# \u5411\u7c7b\u578b\u68c0\u67e5\u5668\u6307\u793a\u8be5\u65b9\u6cd5\u65e8\u5728\u91cd\u5199\u8d85\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3002\n# \u8fd9\u5141\u8bb8\u7c7b\u578b\u68c0\u67e5\u5668\u5728\u6253\u7b97\u91cd\u5199\u57fa\u7c7b\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u5b9e\u9645\u4e0a\u6ca1\u6709\u91cd\u5199\u7684\u60c5\u51b5\u4e0b\u6355\u83b7\u9519\u8bef\u3002\nfrom typing import override\n\n\nclass Base:\n    def get_color(self) -> str:\n        return "blue"\n\n\nclass GoodChild(Base):\n    @override  # ok: overrides Base.get_color\n    def get_color(self) -> str:\n        return "yellow"\n\n\nclass BadChild(Base):\n    @override  # type checker error: does not override Base.get_color\n    def get_colour(self) -> str:\n        return "red"\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},'<cell>19: error: Method "get_colour" is marked as an override, but no base method was found with this name  [misc]\nERROR:nb-mypy:<cell>19: error: Method "get_colour" is marked as an override, but no base method was found with this name  [misc]\n'))),(0,l.kt)("h3",{id:"pep-692-\u4f18\u5316-class-typeddictdict"},"PEP 692: \u4f18\u5316 ",(0,l.kt)("inlineCode",{parentName:"h3"},"class TypedDict(dict)")),(0,l.kt)("p",null,"Python3.8 \u5f15\u5165 ",(0,l.kt)("inlineCode",{parentName:"p"},"TypedDict"),"\u3002"),(0,l.kt)("p",null,"\u521b\u5efa\u7528\u6237\u7684\u5b57\u5178\u65f6\uff0c\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"TypedDict")," \u505a\u57fa\u7c7b\uff0clinter \u53ef\u5b8c\u6210\u6b63\u786e\u7684\u7c7b\u578b\u68c0\u67e5\u3002"),(0,l.kt)("p",null,"Python3.12 \u4f18\u5316\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"**kwargs \u7684\u7c7b\u578b\u6807\u6ce8\u65b9\u5f0f")," \u7684\u6807\u6ce8\u65b9\u5f0f\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://peps.python.org/pep-0692/"},"PEP 692 \u2013 Using TypedDict for more precise ","*","*","kwargs typing")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from typing import TypedDict\n\n\nclass Point2D(TypedDict):\n    x: int\n    y: int\n    label: str\n\n\na: Point2D = {"x": 1, "y": 2, "label": "good"}  # OK\nb: Point2D = {"z": 3, "label": "bad"}  # \u7c7b\u578b\u68c0\u67e5\u5931\u8d25\n\nprint(Point2D(x=1, y=2, label="first") == dict(x=1, y=2, label="first"))  # \u8fd0\u884c\u65f6\u5373dict\n')),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},'<cell>11: error: Missing keys ("x", "y") for TypedDict "Point2D"  [typeddict-item]\nERROR:nb-mypy:<cell>11: error: Missing keys ("x", "y") for TypedDict "Point2D"  [typeddict-item]\n<cell>11: error: Extra key "z" for TypedDict "Point2D"  [typeddict-unknown-key]\nERROR:nb-mypy:<cell>11: error: Extra key "z" for TypedDict "Point2D"  [typeddict-unknown-key]\n'))),(0,l.kt)("blockquote",null,(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"True\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from typing import Unpack\n\n\n# python3.12 \u65b0\u589e\u4e86 **kwargs \u7684\u7c7b\u578b\u6807\u6ce8\u65b9\u5f0f\uff0c\u7c7b\u578b\u8bc6\u522b\u66f4\u7cbe\u51c6\ndef foobar(**kwargs: Unpack[Point2D]):\n    ...\n")),(0,l.kt)("h2",{id:"\u79fb\u9664"},"\u79fb\u9664"),(0,l.kt)("h3",{id:"distuils-\u5305"},"distuils \u5305"),(0,l.kt)("p",null,"py3.10 \u5f00\u59cb\u542f\u7528\uff0cpy3.12 \u79fb\u9664\u3002"),(0,l.kt)("p",null,"pyTP \u4e2d\u5c1a\u5728\u4f7f\u7528\uff0c\u9700\u8981\u5c3d\u5feb\u8003\u8651\u66ff\u6362\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# setup.py\nfrom distutils.core import Command\n")),(0,l.kt)("p",null,"\u63a8\u8350\u7684 pip \u5b89\u88c5\u5668\u7528 setuptools \u8fd0\u884c\u6240\u6709\u7684 setup.py \u811a\u672c"),(0,l.kt)("h3",{id:"imp-\u6a21\u5757"},"imp \u6a21\u5757"),(0,l.kt)("p",null,"\u4f7f\u7528 importlib \u6a21\u5757\u66ff\u4ee3\u5176\u529f\u80fd\u3002"))}c.isMDXComponent=!0}}]);